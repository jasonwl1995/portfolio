{"ast":null,"code":"var _jsxFileName = \"/Users/j.lin/prime/tier3/art-galore-solo/src/components/DiscoverUserPage/DiscoverUserPage.jsx\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport DropdownNav from '../Nav/DropdownNav';\nimport './GalleryPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DiscoverUserPage() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var params = useParams();\n  var disUserId = params;\n  var artworkList = useSelector(function (store) {\n    return store.artwork;\n  });\n  var user = useSelector(function (store) {\n    return store.user;\n  });\n  useEffect(function () {\n    dispatch({\n      type: 'FETCH_USER_ARTWORK',\n      payload: {\n        userid: disUserId.id\n      }\n    });\n  }, []); //   const likeArtwork = (artworkid) => {\n  //     dispatch({\n  //       type: 'ADD_LIKE_ON_USERPAGE',\n  //       payload: {\n  //         artworkid: artworkid,\n  //         userid: user.id,\n  //         //need to pass the selected user from the drop-down list\n  //         discover_userid: params.id,\n  //       }\n  //     });\n  //  };\n  //  const unlikeArtwork = (artworkid) => {\n  //    dispatch({\n  //      type: 'ADD_UNLIKE_ON_USERPAGE',\n  //      payload: {\n  //        artworkid: artworkid,\n  //        userid: user.id,\n  //         //need to pass the selected user from the drop-down list\n  //        discover_userid: params.id,\n  //      }\n  //    });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [artworkList && artworkList.length && artworkList[0].username, \"'s Gallery!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: artworkList && artworkList.length && artworkList[0].intro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Search By Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(DropdownNav, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"artwork\",\n        children: //making sure artworkList is populated before rendering\n        artworkList && artworkList.length && artworkList.map(function (artwork, i) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"artworkdiv\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: artwork.image,\n                height: \"350px\",\n                weight: \"250px \",\n                alt: artwork.description,\n                onClick: function onClick() {\n                  return history.push(\"/details/\".concat(artwork.id));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, _this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: artwork.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: function onClick() {\n                  return history.push(\"/details/\".concat(artwork.id));\n                },\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n}\n\nexport default DiscoverUserPage;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/components/DiscoverUserPage/DiscoverUserPage.jsx"],"names":["React","useEffect","useDispatch","useSelector","useHistory","useParams","DropdownNav","DiscoverUserPage","dispatch","history","params","disUserId","artworkList","store","artwork","user","type","payload","userid","id","length","username","intro","map","i","image","description","push","title"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport DropdownNav from '../Nav/DropdownNav';\n\nimport './GalleryPage.css';\n\nfunction DiscoverUserPage() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const params = useParams();\n  const disUserId = params\n\n  const artworkList = useSelector(store => store.artwork);\n  const user = useSelector((store) => store.user);\n\n  useEffect(() => {\n    dispatch({\n      type: 'FETCH_USER_ARTWORK',\n      payload: { userid: disUserId.id }\n    });\n  }, []);\n\n\n//   const likeArtwork = (artworkid) => {\n//     dispatch({\n//       type: 'ADD_LIKE_ON_USERPAGE',\n//       payload: {\n//         artworkid: artworkid,\n//         userid: user.id,\n//         //need to pass the selected user from the drop-down list\n//         discover_userid: params.id,\n//       }\n//     });\n//  };\n\n//  const unlikeArtwork = (artworkid) => {\n//    dispatch({\n//      type: 'ADD_UNLIKE_ON_USERPAGE',\n//      payload: {\n//        artworkid: artworkid,\n//        userid: user.id,\n//         //need to pass the selected user from the drop-down list\n//        discover_userid: params.id,\n//      }\n//    });\n// };\n\nreturn(\n  <div>\n    <main>\n      <h1>{artworkList && artworkList.length &&\n      artworkList[0].username}'s Gallery!</h1>\n      <h2>{artworkList && artworkList.length &&\n      artworkList[0].intro}</h2>\n\n      <>\n      <div>\n        <p>Search By Username:</p>\n        <DropdownNav />\n      </div>\n      </>\n      \n      <section className=\"artwork\">\n          {\n            //making sure artworkList is populated before rendering\n            artworkList && artworkList.length && \n            artworkList.map((artwork, i) => {\n                return (\n                  <>\n                  <div className=\"artworkdiv\" key = {i}>\n                    <img src={artwork.image} height=\"350px\" weight = \"250px \"alt={artwork.description} \n                    onClick={() => history.push(`/details/${artwork.id}`)}/>\n                    \n                  </div>\n                  <br></br>\n                  <div>\n                    <h3>{artwork.title}</h3>\n                  </div>\n                  <br></br>\n                  <div>\n\n                  <button onClick={() => history.push(`/details/${artwork.id}`)}>\n                    Details\n                  </button>\n                    {/* <div>\n                        Likes: {artwork.favorite}\n                    </div>\n                    {\n\n                          (artwork.favorite > 0)? \n                          <>\n                          <button onClick = { (evt) => {unlikeArtwork(artwork.id)}}>\n                            UnLike\n                          </button>\n                          </> \n                          : \n                          <>\n                          <button onClick = { (evt) => {likeArtwork(artwork.id)}}>\n                            Like\n                          </button>\n                          </>\n                    }     */}\n                  </div>\n                </>\n                );\n            })              \n          }\n      </section>\n    </main>\n  </div>\n  );\n}\n\nexport default DiscoverUserPage;\n"]},"metadata":{},"sourceType":"module"}