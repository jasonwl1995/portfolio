{"ast":null,"code":"import { combineReducers } from 'redux';\nimport errors from './errors.reducer';\nimport user from './user.reducer';\nimport artwork from './artwork.reducer';\nimport detail from './detail.reducer';\nimport category from './category.reducer';\nimport userList from './userlist.reducer';\nimport aws from './aws.reducer';\nimport awsPFP from './awspfp.reducer';\nimport dpCategory from './dpcategory.reducer'; // rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\n\nvar rootReducer = combineReducers({\n  errors: errors,\n  // contains registrationMessage and loginMessage\n  user: user,\n  // will have an id and username if someone is logged in\n  artwork: artwork,\n  detail: detail,\n  category: category,\n  userList: userList,\n  aws: aws,\n  awsPFP: awsPFP,\n  dpCategory: dpCategory\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/portfolio/src/redux/reducers/_root.reducer.js"],"names":["combineReducers","errors","user","artwork","detail","category","userList","aws","awsPFP","dpCategory","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB,C,CAGA;AACA;AACA;AAEA;AACA;;AACA,IAAMC,WAAW,GAAGV,eAAe,CAAC;AAClCC,EAAAA,MAAM,EAANA,MADkC;AAC1B;AACRC,EAAAA,IAAI,EAAJA,IAFkC;AAE5B;AACNC,EAAAA,OAAO,EAAPA,OAHkC;AAIlCC,EAAAA,MAAM,EAANA,MAJkC;AAKlCC,EAAAA,QAAQ,EAARA,QALkC;AAMlCC,EAAAA,QAAQ,EAARA,QANkC;AAOlCC,EAAAA,GAAG,EAAHA,GAPkC;AAQlCC,EAAAA,MAAM,EAANA,MARkC;AASlCC,EAAAA,UAAU,EAAVA;AATkC,CAAD,CAAnC;AAYA,eAAeC,WAAf","sourcesContent":["import { combineReducers } from 'redux';\nimport errors from './errors.reducer';\nimport user from './user.reducer';\nimport artwork from './artwork.reducer';\nimport detail from './detail.reducer';\nimport category from './category.reducer';\nimport userList from './userlist.reducer';\nimport aws from './aws.reducer';\nimport awsPFP from './awspfp.reducer';\nimport dpCategory from './dpcategory.reducer';\n\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  user, // will have an id and username if someone is logged in\n  artwork,\n  detail,\n  category,\n  userList,\n  aws,\n  awsPFP,\n  dpCategory,\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}