{"ast":null,"code":"import _slicedToArray from \"/Users/j.lin/prime/tier3/art-galore-solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/j.lin/prime/tier3/art-galore-solo/src/components/MyGalleryPage/MyGalleryPage.jsx\";\n\n/* Import Libraries */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport './GalleryPage.css'; // MATERIAL UI\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { borders } from '@material-ui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      height: 140,\n      width: 100\n    },\n    control: {\n      padding: theme.spacing(2)\n    },\n    img: {\n      maxWidth: '100%',\n      maxHeight: '100%'\n    }\n  };\n}); // Function fetches all artworks from a logged in user\n// and displays it on the My Gallery Page\n\nfunction MyGalleryPage() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var classes = useStyles();\n\n  var _React$useState = React.useState(2),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      spacing = _React$useState2[0],\n      setSpacing = _React$useState2[1]; // Grabs information from Global Redex Store\n\n\n  var artworkList = useSelector(function (store) {\n    return store.artwork;\n  });\n  var user = useSelector(function (store) {\n    return store.user;\n  }); // Loads all artwork from user\n\n  useEffect(function () {\n    dispatch({\n      type: 'FETCH_USER_ARTWORK',\n      payload: {\n        userid: user.id\n      }\n    });\n  }, []); // Function called once details button is clicked\n  // Brings user to My Artwork Details Page\n\n  var artworkDetails = function artworkDetails(artworkid) {\n    history.push(\"/mydetails/\".concat(artworkid));\n  }; // Function called once delete button is clicked\n  // Deletes artwork from database and removes it from page\n\n\n  var deleteArtwork = function deleteArtwork(artworkid) {\n    dispatch({\n      type: 'DELETE_ARTWORK',\n      payload: {\n        artworkid: artworkid,\n        userid: user.id\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          width: \"60%\",\n          border: 1,\n          borderRadius: 16,\n          className: \"profileCard\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              align: \"center\",\n              lineHeight: 2,\n              fontWeight: \"fontWeightBold\",\n              children: \"My Gallery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              align: \"center\",\n              lineHeight: 2,\n              children: user.intro\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"center\",\n            spacing: spacing,\n            children: // Displays either users artwork or if \n            // there are not artworks, a message\n            artworkList && artworkList.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: artworkList.map(function (artwork) {\n                return /*#__PURE__*/_jsxDEV(Grid, {\n                  className: \"artworkCard\",\n                  children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                    align: \"center\",\n                    variant: \"h5\",\n                    children: artwork.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: artwork.image,\n                    alt: artwork.title,\n                    className: classes.img,\n                    onClick: function onClick() {\n                      return history.push(\"/mydetails/\".concat(artwork.id));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                    align: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      bottom: 20,\n                      onClick: function onClick() {\n                        return history.push(\"/details/\".concat(artwork.id));\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        children: \"Details\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 25\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 25\n                    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      onClick: function onClick(evt) {\n                        deleteArtwork(artwork.id);\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 27\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 27\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 27\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 23\n                }, _this) //   <>\n                //   <div className=\"artworkdiv\">\n                //     <img src={artwork.image} height=\"350px\" weight = \"250px \"alt={artwork.description} \n                //     onClick={() => history.push(`/mydetails/${artwork.id}`)}/>\n                //   </div>\n                //   {/* Displays artwork title */}\n                //   <div>\n                //     <h3>{artwork.title}</h3>\n                //   </div>\n                //   <div>\n                //     {/* Button that calls artworkDetails button brings user to the My Details Page */}\n                //     <button onClick = { (evt) => {artworkDetails(artwork.id)}}>\n                //       Details\n                //     </button>\n                //     {/* Button that calls function to delete artwork */}\n                //     <button onClick = { (evt) => {deleteArtwork(artwork.id)}}>\n                //       Delete\n                //     </button>\n                //   </div>\n                // </>\n                ;\n              })\n            }, void 0, false) :\n            /*#__PURE__*/\n            // Display message if user has no artworks\n            _jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"You Have Not Added Any Artworks Yet!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MyGalleryPage;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/components/MyGalleryPage/MyGalleryPage.jsx"],"names":["React","useEffect","useDispatch","useSelector","useHistory","makeStyles","Grid","Typography","Box","Button","borders","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","img","maxWidth","maxHeight","MyGalleryPage","dispatch","history","classes","useState","setSpacing","artworkList","store","artwork","user","type","payload","userid","id","artworkDetails","artworkid","push","deleteArtwork","intro","length","map","title","image","evt"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,mBAAP,C,CAEA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,qBAAxB;;;AAEA,IAAMC,SAAS,GAAGN,UAAU,CAAC,UAACO,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KADiC;AAIvCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,GADH;AAELC,MAAAA,KAAK,EAAE;AAFF,KAJgC;AAQvCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AADF,KAR8B;AAWvCC,IAAAA,GAAG,EAAE;AACHC,MAAAA,QAAQ,EAAE,MADP;AAEHC,MAAAA,SAAS,EAAE;AAFR;AAXkC,GAAZ;AAAA,CAAD,CAA5B,C,CAgBA;AACA;;AACA,SAASC,aAAT,GAAyB;AAAA;;AACvB,MAAMC,QAAQ,GAAGvB,WAAW,EAA5B;AACA,MAAMwB,OAAO,GAAGtB,UAAU,EAA1B;AACA,MAAMuB,OAAO,GAAGhB,SAAS,EAAzB;;AAHuB,wBAIOX,KAAK,CAAC4B,QAAN,CAAe,CAAf,CAJP;AAAA;AAAA,MAIhBR,OAJgB;AAAA,MAIPS,UAJO,wBAMvB;;;AACA,MAAMC,WAAW,GAAG3B,WAAW,CAAC,UAAA4B,KAAK;AAAA,WAAIA,KAAK,CAACC,OAAV;AAAA,GAAN,CAA/B;AACA,MAAMC,IAAI,GAAG9B,WAAW,CAAC,UAAC4B,KAAD;AAAA,WAAWA,KAAK,CAACE,IAAjB;AAAA,GAAD,CAAxB,CARuB,CAUvB;;AACAhC,EAAAA,SAAS,CAAC,YAAM;AACdwB,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAEH,IAAI,CAACI;AADN;AAFF,KAAD,CAAR;AAMD,GAPQ,EAON,EAPM,CAAT,CAXuB,CAoBvB;AACA;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAAe;AACpCb,IAAAA,OAAO,CAACc,IAAR,sBAA2BD,SAA3B;AACD,GAFD,CAtBuB,CA0BvB;AACA;;;AACA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACF,SAAD,EAAe;AACnCd,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,OAAO,EAAE;AACPI,QAAAA,SAAS,EAAEA,SADJ;AAEPH,QAAAA,MAAM,EAAEH,IAAI,CAACI;AAFN;AAFF,KAAD,CAAR;AAOF,GARA;;AAUA,sBACE;AAAA,2BACE;AAAA,8BACA,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC,KAAX;AAAiB,UAAA,MAAM,EAAE,CAAzB;AAA4B,UAAA,YAAY,EAAE,EAA1C;AAA8C,UAAA,SAAS,EAAC,aAAxD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA,mCACE,QAAC,GAAD;AAAK,cAAA,KAAK,EAAC,QAAX;AAAoB,cAAA,UAAU,EAAE,CAAhC;AAAmC,cAAA,UAAU,EAAC,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAAA,mCACE,QAAC,GAAD;AAAK,cAAA,KAAK,EAAC,QAAX;AAAoB,cAAA,UAAU,EAAE,CAAhC;AAAA,wBACGJ,IAAI,CAACS;AADR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAyBE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAEf,OAAO,CAACd,IAAnC;AAAyC,QAAA,OAAO,EAAE,CAAlD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAC,QAAxB;AAAiC,YAAA,OAAO,EAAEO,OAA1C;AAAA,sBAGE;AACA;AACCU,YAAAA,WAAW,IAAIA,WAAW,CAACa,MAA5B,gBACA;AAAA,wBAEMb,WAAW,CAACc,GAAZ,CAAgB,UAACZ,OAAD,EAAa;AAC3B,oCACA,QAAC,IAAD;AACA,kBAAA,SAAS,EAAC,aADV;AAAA,0CAGA;AAAA;AAAA;AAAA;AAAA,2BAHA,eAIA,QAAC,UAAD;AAAY,oBAAA,KAAK,EAAC,QAAlB;AAA2B,oBAAA,OAAO,EAAC,IAAnC;AAAA,8BAAyCA,OAAO,CAACa;AAAjD;AAAA;AAAA;AAAA;AAAA,2BAJA,eAKA;AAAA;AAAA;AAAA;AAAA,2BALA,eAME;AAAK,oBAAA,GAAG,EAAEb,OAAO,CAACc,KAAlB;AAAyB,oBAAA,GAAG,EAAEd,OAAO,CAACa,KAAtC;AAA6C,oBAAA,SAAS,EAAElB,OAAO,CAACN,GAAhE;AACA,oBAAA,OAAO,EAAE;AAAA,6BAAMK,OAAO,CAACc,IAAR,sBAA2BR,OAAO,CAACK,EAAnC,EAAN;AAAA;AADT;AAAA;AAAA;AAAA;AAAA,2BANF,eAQA;AAAA;AAAA;AAAA;AAAA,2BARA,eASI,QAAC,GAAD;AAAK,oBAAA,KAAK,EAAC,QAAX;AAAA,4CACF,QAAC,MAAD;AAAQ,sBAAA,OAAO,EAAC,WAAhB;AAA4B,sBAAA,KAAK,EAAC,WAAlC;AAA8C,sBAAA,MAAM,EAAE,EAAtD;AAA0D,sBAAA,OAAO,EAAE;AAAA,+BAAMX,OAAO,CAACc,IAAR,oBAAyBR,OAAO,CAACK,EAAjC,EAAN;AAAA,uBAAnE;AAAA,6CACA,QAAC,UAAD;AAAY,wBAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,6BADE,eAMA,QAAC,MAAD;AAAQ,sBAAA,OAAO,EAAC,WAAhB;AAA4B,sBAAA,KAAK,EAAC,WAAlC;AAA8C,sBAAA,OAAO,EAAK,iBAACU,GAAD,EAAS;AAACN,wBAAAA,aAAa,CAACT,OAAO,CAACK,EAAT,CAAb;AAA0B,uBAA9F;AAAA,6CACA,QAAC,UAAD;AAAY,wBAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,6BANA;AAAA;AAAA;AAAA;AAAA;AAAA,2BATJ;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,CAwBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;AA+CH,eAhDC;AAFN,6BADA;AAAA;AAuDA;AACA;AAAA,qCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AA7DF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqGD;;AAED,eAAeb,aAAf","sourcesContent":["/* Import Libraries */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport './GalleryPage.css';\n\n// MATERIAL UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { borders } from '@material-ui/system';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  img: {\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n// Function fetches all artworks from a logged in user\n// and displays it on the My Gallery Page\nfunction MyGalleryPage() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const [spacing, setSpacing] = React.useState(2);\n\n  // Grabs information from Global Redex Store\n  const artworkList = useSelector(store => store.artwork);\n  const user = useSelector((store) => store.user);\n\n  // Loads all artwork from user\n  useEffect(() => {\n    dispatch({\n      type: 'FETCH_USER_ARTWORK',\n      payload: { \n        userid: user.id \n        }\n    });\n  }, []);\n\n  // Function called once details button is clicked\n  // Brings user to My Artwork Details Page\n  const artworkDetails = (artworkid) => {\n    history.push(`/mydetails/${artworkid}`);\n  };\n\n  // Function called once delete button is clicked\n  // Deletes artwork from database and removes it from page\n  const deleteArtwork = (artworkid) => {\n    dispatch({\n      type: 'DELETE_ARTWORK',\n      payload: {\n        artworkid: artworkid,\n        userid: user.id,\n      }\n    });\n };\n  \n  return(\n    <div>\n      <main>\n      <Box align=\"center\">\n        <Box width=\"60%\" border={1} borderRadius={16} className=\"profileCard\">\n          <Typography variant=\"h3\">\n            <Box align=\"center\" lineHeight={2} fontWeight=\"fontWeightBold\">\n              My Gallery\n            </Box>\n          </Typography>\n\n          <Typography variant=\"body1\">\n            <Box align=\"center\" lineHeight={2}>\n              {user.intro}\n            </Box>\n          </Typography>\n        </Box>\n      </Box>\n\n        {/* <h1>My Gallery</h1> */}\n\n        {/* Displays artist intro */}\n        {/* <p>{user.intro}</p> */}\n\n        {/* Displays artworks from signed in\n            user onto the My Gallery page */}\n\n        <Grid container className={classes.root} spacing={2}>\n          <Grid item xs={12}>\n            <Grid container justify=\"center\" spacing={spacing}>\n        {/* <section className=\"artwork\"> */}\n            {\n              // Displays either users artwork or if \n              // there are not artworks, a message\n              (artworkList && artworkList.length)?\n              <>\n                {\n                    artworkList.map((artwork) => {\n                      return (\n                      <Grid\n                      className=\"artworkCard\"\n                      >\n                      <br></br>\n                      <Typography align=\"center\" variant=\"h5\">{artwork.title}</Typography>\n                      <br></br>\n                        <img src={artwork.image} alt={artwork.title} className={classes.img}\n                        onClick={() => history.push(`/mydetails/${artwork.id}`)}/>\n                      <br></br>\n                          <Box align=\"center\">\n                        <Button variant=\"contained\" color=\"secondary\" bottom={20} onClick={() => history.push(`/details/${artwork.id}`)}>\n                        <Typography variant=\"body1\">\n                        Details\n                        </Typography>\n                        </Button>\n                          <Button variant=\"contained\" color=\"secondary\" onClick = { (evt) => {deleteArtwork(artwork.id)}}>\n                          <Typography variant=\"body1\">\n                            Delete\n                          </Typography>\n                          </Button>\n                          </Box>\n                      </Grid>\n\n                      //   <>\n                      //   <div className=\"artworkdiv\">\n                      //     <img src={artwork.image} height=\"350px\" weight = \"250px \"alt={artwork.description} \n                      //     onClick={() => history.push(`/mydetails/${artwork.id}`)}/>\n                      //   </div>\n                        \n                      //   {/* Displays artwork title */}\n                      //   <div>\n                      //     <h3>{artwork.title}</h3>\n                      //   </div>\n\n                      //   <div>\n                      //     {/* Button that calls artworkDetails button brings user to the My Details Page */}\n                      //     <button onClick = { (evt) => {artworkDetails(artwork.id)}}>\n                      //       Details\n                      //     </button>\n                      //     {/* Button that calls function to delete artwork */}\n                      //     <button onClick = { (evt) => {deleteArtwork(artwork.id)}}>\n                      //       Delete\n                      //     </button>\n                      //   </div>\n                      // </>\n                      );\n                  })  \n                }                  \n              </>\n              :\n              // Display message if user has no artworks\n              <>\n                <h3>You Have Not Added Any Artworks Yet!</h3>\n              </>\n           }\n        {/* </section> */}\n            </Grid>\n          </Grid>\n        </Grid>\n      </main>\n    </div>\n    );\n}\n\nexport default MyGalleryPage;\n"]},"metadata":{},"sourceType":"module"}