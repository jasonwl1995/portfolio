{"ast":null,"code":"import _classCallCheck from \"/Users/j.lin/prime/tier3/art-galore-solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/j.lin/prime/tier3/art-galore-solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/j.lin/prime/tier3/art-galore-solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/j.lin/prime/tier3/art-galore-solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/j.lin/prime/tier3/art-galore-solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/j.lin/prime/tier3/art-galore-solo/src/components/ImageUpload/ImageUpload.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DropzoneS3Uploader from 'react-dropzone-s3-uploader';\nimport { useParams } from 'react-router-dom'; // import './ImageUpload.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar dropzoneStyle = {\n  border: '1px solid black',\n  height: '200px',\n  width: '200px',\n  \"background-color\": \"#dddddd\"\n};\n\nvar ImageUpload = /*#__PURE__*/function (_Component) {\n  _inherits(ImageUpload, _Component);\n\n  var _super = _createSuper(ImageUpload);\n\n  function ImageUpload() {\n    var _this;\n\n    _classCallCheck(this, ImageUpload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleFinishedUpload = function (info) {\n      console.log('info', info); // console.log('File uploaded with filename', info.filename)\n\n      console.log('Access it on s3 at', info.fileUrl);\n\n      if (_this.props.page === \"AddArtworkImage\") {\n        _this.props.dispatch({\n          type: 'SET_IMAGE_URL',\n          payload: info.fileUrl\n        });\n      } else if (_this.props.page === \"AddProfilePicture\") {\n        _this.props.dispatch({\n          type: 'SET_PFP_URL',\n          payload: info.fileUrl\n        });\n      }\n\n      ;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"File Uploaded!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, _assertThisInitialized(_this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, _assertThisInitialized(_this)); // this.props.children = {completedDropElement};\n    };\n\n    return _this;\n  }\n\n  _createClass(ImageUpload, [{\n    key: \"render\",\n    value: function render() {\n      var uploadOptions = {\n        server: 'http://localhost:5000' // Works with or without, used to assign url query params, can look up later\n        // signingUrlQueryParams: {uploadType: 'avatar'},\n\n      };\n      var s3Url = 'https://art-gallery-primesolo.s3.amazonaws.com'; // const innerDropElement = (\n      //   <div class=\"inner-drop\">\n      //     <p>Click or Drop File Here!</p>\n      //   </div>\n      // )\n      // const completedDropElement = (\n      //   <div class=\"completed-drop\">\n      //     <p>File Uploaded!</p>\n      //   </div>\n      // )\n\n      return /*#__PURE__*/_jsxDEV(DropzoneS3Uploader // children={innerDropElement}\n      , {\n        onFinish: this.handleFinishedUpload,\n        style: dropzoneStyle,\n        s3Url: s3Url,\n        maxSize: 1024 * 1024 * 5,\n        upload: uploadOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return ImageUpload;\n}(Component);\n\nexport default connect()(ImageUpload);","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/components/ImageUpload/ImageUpload.jsx"],"names":["React","Component","connect","DropzoneS3Uploader","useParams","dropzoneStyle","border","height","width","ImageUpload","handleFinishedUpload","info","console","log","fileUrl","props","page","dispatch","type","payload","uploadOptions","server","s3Url"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;;;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,iBADY;AAEpBC,EAAAA,MAAM,EAAE,OAFY;AAGpBC,EAAAA,KAAK,EAAE,OAHa;AAIpB,sBAAoB;AAJA,CAAtB;;IAQMC,W;;;;;;;;;;;;;;;;UAIFC,oB,GAAuB,UAAAC,IAAI,EAAI;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB,EAD6B,CAE7B;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,IAAI,CAACG,OAAvC;;AACA,UAAI,MAAKC,KAAL,CAAWC,IAAX,KAAoB,iBAAxB,EACA;AACA,cAAKD,KAAL,CAAWE,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,eADY;AAElBC,UAAAA,OAAO,EAAER,IAAI,CAACG;AAFI,SAApB;AAIC,OAND,MAMO,IAAI,MAAKC,KAAL,CAAWC,IAAX,KAAoB,mBAAxB,EACP;AACE,cAAKD,KAAL,CAAWE,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,aADY;AAElBC,UAAAA,OAAO,EAAER,IAAI,CAACG;AAFI,SAApB;AAID;;AAAA;AACD,0BACA;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uCADA,CAjB6B,CAsB7B;AACD,K;;;;;;;WAEH,kBAAS;AAEP,UAAMM,aAAa,GAAG;AACpBC,QAAAA,MAAM,EAAE,uBADY,CAEpB;AACA;;AAHoB,OAAtB;AAMA,UAAMC,KAAK,GAAG,gDAAd,CARO,CAUP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,0BACE,QAAC,kBAAD,CACE;AADF;AAEE,QAAA,QAAQ,EAAE,KAAKZ,oBAFjB;AAGE,QAAA,KAAK,EAAEL,aAHT;AAIE,QAAA,KAAK,EAAEiB,KAJT;AAKE,QAAA,OAAO,EAAE,OAAO,IAAP,GAAc,CALzB;AAME,QAAA,MAAM,EAAEF;AANV;AAAA;AAAA;AAAA;AAAA,cADF;AAUD;;;;EA7DuBnB,S;;AAgE1B,eAAeC,OAAO,GAAGO,WAAH,CAAtB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DropzoneS3Uploader from 'react-dropzone-s3-uploader';\nimport { useParams } from 'react-router-dom';\n// import './ImageUpload.css';\n\nconst dropzoneStyle = {\n  border: '1px solid black',\n  height: '200px',\n  width: '200px',\n  \"background-color\": \"#dddddd\",\n}\n\n\nclass ImageUpload extends Component {\n  // this.props.useParams();\n  // this.page = params.page;\n\n    handleFinishedUpload = info => {\n      console.log('info', info);\n      // console.log('File uploaded with filename', info.filename)\n      console.log('Access it on s3 at', info.fileUrl)\n      if( this.props.page === \"AddArtworkImage\" )\n      {\n      this.props.dispatch({\n        type: 'SET_IMAGE_URL',\n        payload: info.fileUrl\n      });\n      } else if (this.props.page === \"AddProfilePicture\")\n      {\n        this.props.dispatch({\n          type: 'SET_PFP_URL',\n          payload: info.fileUrl\n        });\n      };\n      return(\n      <div>\n        <p>File Uploaded!</p>\n      </div>\n      );\n      // this.props.children = {completedDropElement};\n    }\n\n  render() {\n\n    const uploadOptions = {\n      server: 'http://localhost:5000',\n      // Works with or without, used to assign url query params, can look up later\n      // signingUrlQueryParams: {uploadType: 'avatar'},\n    }\n\n    const s3Url = 'https://art-gallery-primesolo.s3.amazonaws.com'\n\n    // const innerDropElement = (\n    //   <div class=\"inner-drop\">\n    //     <p>Click or Drop File Here!</p>\n    //   </div>\n    // )\n\n    // const completedDropElement = (\n    //   <div class=\"completed-drop\">\n    //     <p>File Uploaded!</p>\n    //   </div>\n    // )\n\n    return (\n      <DropzoneS3Uploader\n        // children={innerDropElement}\n        onFinish={this.handleFinishedUpload}\n        style={dropzoneStyle}\n        s3Url={s3Url}\n        maxSize={1024 * 1024 * 5}\n        upload={uploadOptions}\n      />\n    )\n  }\n}\n\nexport default connect()(ImageUpload);\n"]},"metadata":{},"sourceType":"module"}