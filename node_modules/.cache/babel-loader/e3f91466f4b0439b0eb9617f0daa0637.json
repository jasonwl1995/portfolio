{"ast":null,"code":"import _slicedToArray from \"/Users/j.lin/prime/tier3/art-galore-solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/j.lin/prime/tier3/art-galore-solo/src/components/RegisterForm/RegisterForm.jsx\";\n\n/* Import Libraries */\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom'; // Function that allows user to input username and \n// password in order to register to use app\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterForm() {\n  var errors = useSelector(function (store) {\n    return store.errors;\n  });\n  var dispatch = useDispatch();\n  var history = useHistory(); // Local state variables used for capturing form input \n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1]; // Function called upon 'Register' button click\n\n\n  var registerUser = function registerUser(event) {\n    // Keep page from refreshing on form submission\n    event.preventDefault();\n    dispatch({\n      type: 'REGISTER',\n      payload: {\n        username: username,\n        password: password\n      }\n    });\n  }; // end registerUser\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"formPanel\",\n    onSubmit: registerUser,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), errors.registrationMessage && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"alert\",\n      role: \"alert\",\n      children: errors.registrationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: username,\n          required: true,\n          onChange: function onChange(event) {\n            return setUsername(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          required: true,\n          onChange: function onChange(event) {\n            return setPassword(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"btn\",\n        type: \"submit\",\n        name: \"submit\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/components/RegisterForm/RegisterForm.jsx"],"names":["React","useState","useDispatch","useSelector","useHistory","RegisterForm","errors","store","dispatch","history","username","setUsername","password","setPassword","registerUser","event","preventDefault","type","payload","registrationMessage","target","value"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;AACA;;;;AACA,SAASC,YAAT,GAAwB;AACtB,MAAMC,MAAM,GAAGH,WAAW,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACD,MAAjB;AAAA,GAAD,CAA1B;AACA,MAAME,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAMO,OAAO,GAAGL,UAAU,EAA1B,CAHsB,CAKtB;;AALsB,kBAMUH,QAAQ,CAAC,EAAD,CANlB;AAAA;AAAA,MAMfS,QANe;AAAA,MAMLC,WANK;;AAAA,mBAOUV,QAAQ,CAAC,EAAD,CAPlB;AAAA;AAAA,MAOfW,QAPe;AAAA,MAOLC,WAPK,kBAStB;;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B;AACAA,IAAAA,KAAK,CAACC,cAAN;AAEAR,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAE,UADC;AAEPC,MAAAA,OAAO,EAAE;AACPR,QAAAA,QAAQ,EAAEA,QADH;AAEPE,QAAAA,QAAQ,EAAEA;AAFH;AAFF,KAAD,CAAR;AAOD,GAXD,CAVsB,CAqBnB;;;AAEH,sBACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAEE,YAAtC;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGR,MAAM,CAACa,mBAAP,iBACC;AAAI,MAAA,SAAS,EAAC,OAAd;AAAsB,MAAA,IAAI,EAAC,OAA3B;AAAA,gBACGb,MAAM,CAACa;AADV;AAAA;AAAA;AAAA;AAAA,YAHJ,eASE;AAAA,6BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,6CAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAET,QAHT;AAIE,UAAA,QAAQ,MAJV;AAKE,UAAA,QAAQ,EAAE,kBAACK,KAAD;AAAA,mBAAWJ,WAAW,CAACI,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAtB;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAuBE;AAAA,6BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,6CAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAET,QAHT;AAIE,UAAA,QAAQ,MAJV;AAKE,UAAA,QAAQ,EAAE,kBAACG,KAAD;AAAA,mBAAWF,WAAW,CAACE,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAtB;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF,eAqCE;AAAA,6BACE;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAuB,QAAA,IAAI,EAAC,QAA5B;AAAqC,QAAA,IAAI,EAAC,QAA1C;AAAmD,QAAA,KAAK,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;AAED,eAAehB,YAAf","sourcesContent":["/* Import Libraries */\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n// Function that allows user to input username and \n// password in order to register to use app\nfunction RegisterForm() {\n  const errors = useSelector((store) => store.errors);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // Local state variables used for capturing form input \n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Function called upon 'Register' button click\n  const registerUser = (event) => {\n    // Keep page from refreshing on form submission\n    event.preventDefault();\n\n    dispatch({\n      type: 'REGISTER',\n      payload: {\n        username: username,\n        password: password,\n      },\n    });\n  }; // end registerUser\n\n  return (\n    <form className=\"formPanel\" onSubmit={registerUser}>\n      <h2>Register User</h2>\n      {errors.registrationMessage && (\n        <h3 className=\"alert\" role=\"alert\">\n          {errors.registrationMessage}\n        </h3>\n      )}\n      \n      {/* Input field to input username */}\n      <div>\n        <label htmlFor=\"username\">\n          Username:\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            required\n            onChange={(event) => setUsername(event.target.value)}\n          />\n        </label>\n      </div>\n      \n      {/* Input field to input password */}\n      <div>\n        <label htmlFor=\"password\">\n          Password:\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            required\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </label>\n      </div>\n\n      {/* Button that calls registerUser function */}\n      <div>\n        <input className=\"btn\" type=\"submit\" name=\"submit\" value=\"Register\" />\n      </div>\n    </form>\n  );\n}\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}