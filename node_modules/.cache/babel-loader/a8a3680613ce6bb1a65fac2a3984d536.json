{"ast":null,"code":"import _slicedToArray from \"/Users/j.lin/prime/tier3/art-galore-solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/j.lin/prime/tier3/art-galore-solo/src/components/ArtworkDetail/ArtworkDetail.jsx\";\n\n/* Import Libraries */\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useHistory, Link } from 'react-router-dom'; // MATERIAL UI\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { borders } from '@material-ui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      height: 140,\n      width: 100\n    },\n    control: {\n      padding: theme.spacing(2)\n    },\n    img: {\n      maxWidth: '100%',\n      maxHeight: '100%'\n    }\n  };\n}); // Function fetches artwork details from the database\n// and displays it on the Artwork Details page\n\nfunction ArtworkDetail() {\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var params = useParams();\n  var artworkId = params;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(2),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      spacing = _React$useState2[0],\n      setSpacing = _React$useState2[1]; // Grabs information from Global Redex Store\n\n\n  var detail = useSelector(function (store) {\n    return store.detail;\n  });\n  var artwork = useSelector(function (store) {\n    return store.artwork;\n  });\n  var user = useSelector(function (store) {\n    return store.user;\n  });\n  var userList = useSelector(function (store) {\n    return store.userList;\n  }); // Load artwork details on page load\n\n  useEffect(function () {\n    dispatch({\n      type: 'FETCH_ARTWORK_DETAIL',\n      payload: {\n        userId: user.id,\n        artworkId: artworkId.id\n      }\n    });\n  }, []); // Function to send images user liked to the Likes page\n\n  var likeDetails = function likeDetails() {\n    dispatch({\n      type: 'LIKE_ARTWORK_DETAIL',\n      payload: {\n        artworkId: artworkId.id,\n        userId: user.id\n      }\n    });\n  }; // Function to remove the liked image from the Likes page\n\n\n  var unlikeDetails = function unlikeDetails() {\n    dispatch({\n      type: 'UNLIKE_ARTWORK_DETAIL',\n      payload: {\n        artworkId: artworkId.id,\n        userId: user.id\n      }\n    });\n  }; // Handler when user clicks on artist name to go their gallery\n\n\n  var clickHandler = function clickHandler(evt) {\n    var newUser = evt.target.value;\n    userChange(newUser);\n  }; // Gets user id and goes to their gallery page\n\n\n  var userChange = function userChange(newUser) {\n    dispatch({\n      type: 'DISCOVER_USER_ARTWORK',\n      payload: {\n        userid: user.id,\n        discover_userid: newUser\n      }\n    });\n    history.push(\"/discoveruser/\".concat(detail.user_id));\n  };\n\n  return (\n    /*#__PURE__*/\n    //     <main>\n    //       <Box align=\"center\">\n    //         <Box width=\"60%\" border={1} borderRadius={16} className=\"detailsCard\">\n    //           <Typography variant=\"h3\">\n    //             <Box lineHeight={2} fontWeight=\"fontWeightBold\">\n    // {detail.title}\n    //             </Box>\n    //           </Typography>\n    //         </Box>\n    //       </Box>\n    //     </main>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: detail.image,\n        alt: detail.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: detail.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Artist:\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clickHandler,\n            children: detail.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Date created: \", detail.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", detail.theme]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: detail.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this), Number(detail.favorite) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: unlikeDetails,\n          children: \"Unlike\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: likeDetails,\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return history.push('/discover');\n        },\n        children: \"Back to Discover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this)\n  );\n}\n\nexport default ArtworkDetail;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/components/ArtworkDetail/ArtworkDetail.jsx"],"names":["useEffect","useDispatch","useSelector","useParams","useHistory","Link","makeStyles","Grid","Typography","Box","Button","Container","borders","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","img","maxWidth","maxHeight","ArtworkDetail","dispatch","history","params","artworkId","classes","React","useState","setSpacing","detail","store","artwork","user","userList","type","payload","userId","id","likeDetails","unlikeDetails","clickHandler","evt","newUser","target","value","userChange","userid","discover_userid","push","user_id","image","title","username","date","description","Number","favorite"],"mappings":"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","sourcesContent":["/* Import Libraries */\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useHistory, Link} from 'react-router-dom';\n\n// MATERIAL UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { borders } from '@material-ui/system';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  img: {\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\n// Function fetches artwork details from the database\n// and displays it on the Artwork Details page\nfunction ArtworkDetail() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const params = useParams();\n  const artworkId = params;\n\n  const classes = useStyles();\n  const [spacing, setSpacing] = React.useState(2);\n\n  // Grabs information from Global Redex Store\n  const detail = useSelector(store => store.detail);\n  const artwork = useSelector(store => store.artwork);\n  const user = useSelector((store) => store.user);\n  const userList = useSelector(store => store.userList);\n\n  // Load artwork details on page load\n  useEffect(() => {\n    dispatch({\n      type: 'FETCH_ARTWORK_DETAIL',\n      payload: {\n        userId: user.id,\n        artworkId: artworkId.id\n        }\n    });\n  }, []);\n\n  // Function to send images user liked to the Likes page\n  const likeDetails = () => {\n    dispatch({\n      type: 'LIKE_ARTWORK_DETAIL',\n      payload: {\n        artworkId: artworkId.id,\n        userId: user.id,\n      }\n    });\n };\n\n  // Function to remove the liked image from the Likes page\n  const unlikeDetails = () => {\n    dispatch({\n      type: 'UNLIKE_ARTWORK_DETAIL',\n      payload: {\n        artworkId: artworkId.id,\n        userId: user.id,\n      }\n    });\n };\n\n  // Handler when user clicks on artist name to go their gallery\n  const clickHandler = (evt) => {\n    let newUser = evt.target.value;\n    userChange(newUser);\n  };\n\n  // Gets user id and goes to their gallery page\n  const userChange = (newUser) => {\n    dispatch({\n      type: 'DISCOVER_USER_ARTWORK',\n      payload: {\n        userid: user.id,\n        discover_userid: newUser,\n      }\n    });\n    history.push(`/discoveruser/${detail.user_id}`);\n  }\n  \n  return (\n//     <main>\n//       <Box align=\"center\">\n//         <Box width=\"60%\" border={1} borderRadius={16} className=\"detailsCard\">\n//           <Typography variant=\"h3\">\n//             <Box lineHeight={2} fontWeight=\"fontWeightBold\">\n// {detail.title}\n//             </Box>\n//           </Typography>\n        \n//         </Box>\n//       </Box>\n//     </main>\n\n    <div>\n      {/* Displays artwork image */}\n      <img src={detail.image} alt={detail.title} />\n\n      {/* Displays artwork title */}\n      <section>\n        <h2>{detail.title}</h2>\n      </section>\n\n      {/* Displays artist name */}\n      <section>\n        <h3>Artist: \n          <button onClick = {clickHandler}>\n            {detail.username}\n          </button>\n        </h3>\n      </section>\n\n      {/* Displays artwork date created */}\n      <section>\n        <h3>Date created: {detail.date}</h3>\n      </section>\n\n      {/* Displays artwork theme */}\n      <section>\n        <p>Category: {detail.theme}</p>\n      </section>\n\n      {/* Displays artwork description */}\n      <section>\n        <p>Description:</p>\n        <p>{detail.description}</p>\n      </section>\n\n      {/* Button that toggles like and unlike and adds artworks to like_log joint table */}\n      {\n        (Number(detail.favorite) > 0)? \n        <>\n          <button className=\"delete-button\" onClick={unlikeDetails}>\n            Unlike\n          </button>\n        </>\n        :\n        <>\n          <button className=\"edit-button\" onClick={likeDetails}>\n            Like\n          </button>\n        </>\n      }\n\n      {/* Button that takes user back to discover gallery page */}\n      <button onClick = {() => history.push('/discover')}>\n        Back to Discover\n      </button>\n    </div>\n  );\n}\n\nexport default ArtworkDetail;"]},"metadata":{},"sourceType":"module"}