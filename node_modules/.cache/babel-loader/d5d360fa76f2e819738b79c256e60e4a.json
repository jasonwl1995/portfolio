{"ast":null,"code":"import _toConsumableArray from \"/Users/j.lin/prime/tier3/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/j.lin/prime/tier3/portfolio/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport rootReducer from './redux/reducers/_root.reducer'; // imports ./redux/reducers/index.js\n\nimport rootSaga from './redux/sagas/_root.saga'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar store = createStore( // tells the saga middleware to use the rootReducer\n// rootSaga contains all of our other reducers\nrootReducer, // adds all middleware to our project including saga and logger\napplyMiddleware.apply(void 0, _toConsumableArray(middlewareList))); // tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\n\nsagaMiddleware.run(rootSaga);\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this), document.getElementById('react-root'));","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/portfolio/src/index.js"],"names":["React","ReactDOM","createStore","applyMiddleware","Provider","createSagaMiddleware","logger","rootReducer","rootSaga","App","store","middlewareList","sagaMiddleware","run","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,WAAP,MAAwB,gCAAxB,C,CAA0D;;AAC1D,OAAOC,QAAP,MAAqB,0BAArB,C,CAAiD;;AAEjD,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,IAAMC,KAAK,GAAGR,WAAW,EACvB;AACA;AACAK,WAHuB,EAIvB;AACAJ,eAAe,MAAf,4BAAmBQ,cAAnB,EALuB,CAAzB,C,CAQA;AACA;;AACAC,cAAc,CAACC,GAAf,CAAmBL,QAAnB;AAEAP,QAAQ,CAACa,MAAT,eACE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEK,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAJF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers/_root.reducer'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas/_root.saga'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"]},"metadata":{},"sourceType":"module"}