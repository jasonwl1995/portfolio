{"ast":null,"code":"import _slicedToArray from \"/Users/j.lin/prime/tier3/art-galore-solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/j.lin/prime/tier3/art-galore-solo/src/components/EditUser/EditUser.jsx\";\n\n/* Import Libraries */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, Link, useParams } from 'react-router-dom'; // import ImageUpload from '../ImageUpload/ImageUpload';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditUser() {\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var params = useParams();\n  var userId = params;\n  /* Grab data from Redux store */\n\n  var user = useSelector(function (store) {\n    return store.user;\n  });\n  var pfpUrl = useSelector(function (store) {\n    return store.aws;\n  }); // const category = useSelector((store) => store.category);\n\n  /* Local state variables used for capturing form input */\n\n  var _useState = useState(user.username),\n      _useState2 = _slicedToArray(_useState, 2),\n      editUsername = _useState2[0],\n      setEditUsername = _useState2[1]; // const [editPFP, setEditPFP] = useState(user.pfp);\n\n\n  var _useState3 = useState(user.intro),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editIntro = _useState4[0],\n      setEditIntro = _useState4[1]; // const [editAddress, setEditAddress] = useState(user.address);\n  // const [editUsername, setEditUsername] = useState('');\n  // const [editPFP, setEditPFP] = useState('');\n  // const [editIntro, setEditIntro] = useState('');\n  // const [editAddress, setEditAddress] = useState('');\n  //   useEffect(() => {\n  //   dispatch({\n  //     type: 'FETCH_USER_DETAIL',\n  //     payload: {\n  //       userId: user.id\n  //       }\n  //   });\n  // }, []);\n\n\n  var editUser = function editUser(event) {\n    // Keep page from refreshing on form submission\n    event.preventDefault(); // Ping saga to update user object in database\n\n    dispatch({\n      type: 'EDIT_USER',\n      payload: {\n        id: user.id,\n        username: editUsername,\n        pfp: pfpUrl,\n        intro: editIntro // address: editAddress\n\n      }\n    }); // Navigate to profile page\n\n    history.push('/user');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"edit-user\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editUser,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"username\",\n              type: \"text\",\n              placeholder: \"New Username\",\n              value: editUsername,\n              onChange: function onChange(event) {\n                return setEditUsername(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"userPFP\",\n              children: \"Profile Picture URL: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"userPFP\",\n              type: \"text\",\n              placeholder: \"Profile Picture\",\n              value: editPFP,\n              onChange: function onChange(event) {\n                return setEditPFP(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"editPFP\",\n              children: \"Profile Picture: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"userIntro\",\n              children: \"Gallery Introduction: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"userIntro\",\n              placeholder: \"Introduce yourself and your work!\",\n              value: editIntro,\n              onChange: function onChange(event) {\n                return setEditIntro(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-button\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: function onClick() {\n                return history.push('/user');\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\nexport default EditUser;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/components/EditUser/EditUser.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","useHistory","Link","useParams","EditUser","dispatch","history","params","userId","user","store","pfpUrl","aws","username","editUsername","setEditUsername","intro","editIntro","setEditIntro","editUser","event","preventDefault","type","payload","id","pfp","push","target","value","editPFP","setEditPFP"],"mappings":"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","sourcesContent":["/* Import Libraries */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, Link, useParams } from 'react-router-dom';\n// import ImageUpload from '../ImageUpload/ImageUpload';\n\nfunction EditUser() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const params = useParams();\n  const userId = params;\n\n  /* Grab data from Redux store */\n  const user = useSelector((store) => store.user);\n\n  const pfpUrl = useSelector ((store) => store.aws);\n  // const category = useSelector((store) => store.category);\n\n  /* Local state variables used for capturing form input */\n  const [editUsername, setEditUsername] = useState(user.username);\n  // const [editPFP, setEditPFP] = useState(user.pfp);\n  const [editIntro, setEditIntro] = useState(user.intro);\n  // const [editAddress, setEditAddress] = useState(user.address);\n\n  // const [editUsername, setEditUsername] = useState('');\n  // const [editPFP, setEditPFP] = useState('');\n  // const [editIntro, setEditIntro] = useState('');\n  // const [editAddress, setEditAddress] = useState('');\n  \n  //   useEffect(() => {\n  //   dispatch({\n  //     type: 'FETCH_USER_DETAIL',\n  //     payload: {\n  //       userId: user.id\n  //       }\n  //   });\n  // }, []);\n\n\n\n  const editUser = (event) => {\n    // Keep page from refreshing on form submission\n    event.preventDefault();\n\n    // Ping saga to update user object in database\n    dispatch({\n      type: 'EDIT_USER',\n      payload: {\n        id: user.id,\n        username: editUsername,\n        pfp: pfpUrl,\n        intro: editIntro,\n        // address: editAddress\n      },\n    });\n\n    // Navigate to profile page\n    history.push('/user');\n  };\n\n  return (\n    <section className=\"edit-user\">\n      <h2>Edit User</h2>\n\n      <form onSubmit={editUser}>\n        <table>\n          <tr>\n            <td>\n              <label htmlFor=\"username\">Username: </label>\n            </td>\n            <td>\n              <input\n              name=\"username\"\n              type=\"text\"\n              placeholder=\"New Username\"\n              value={editUsername}\n              onChange={(event) => setEditUsername(event.target.value)}\n              />\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n              <label htmlFor=\"userPFP\">Profile Picture URL: </label>\n            </td>\n            <td>\n              <input\n              name=\"userPFP\"\n              type=\"text\"\n              placeholder=\"Profile Picture\"\n              value={editPFP}\n              onChange={(event) => setEditPFP(event.target.value)}\n              />\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n            <label htmlFor=\"editPFP\">Profile Picture: </label>\n            </td>\n            <td>\n              {/* <ImageUpload /> */}\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n              <label htmlFor=\"userIntro\">Gallery Introduction: </label>\n            </td>\n            <td>\n              <textarea\n              name=\"userIntro\"\n              placeholder=\"Introduce yourself and your work!\"\n              value={editIntro}\n              onChange={(event) => setEditIntro(event.target.value)}\n              />\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n              <button className=\"save-button\">Save</button>\n              {/* <input type=\"submit\" value=\"Save\" /> */}\n            </td>\n            <td>\n              <button onClick = {() => history.push('/user')}>\n                Cancel\n              </button>\n            </td>\n          </tr>\n        \n        </table>\n      </form>\n    </section>\n  );\n}\n\nexport default EditUser;\n\n"]},"metadata":{},"sourceType":"module"}