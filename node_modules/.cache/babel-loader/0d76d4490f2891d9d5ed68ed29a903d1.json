{"ast":null,"code":"import _regeneratorRuntime from \"/Users/j.lin/prime/tier3/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(categorySaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchCategory);\n\nimport axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction categorySaga() {\n  return _regeneratorRuntime.wrap(function categorySaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeLatest('FETCH_CATEGORY_LIST', fetchCategory);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n} // worker Saga: will be fired on \"FETCH_CATEGORY\" actions\n// GET categories to display in category dropdown on add artwork\n\n\nfunction fetchCategory() {\n  var category;\n  return _regeneratorRuntime.wrap(function fetchCategory$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return axios.get('/api/category');\n\n        case 3:\n          category = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: 'SET_CATEGORY_LIST',\n            payload: category.data\n          });\n\n        case 6:\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log('Category get request failed', _context2.t0);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nexport default categorySaga;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/portfolio/src/redux/sagas/category.saga.js"],"names":["categorySaga","fetchCategory","axios","put","takeLatest","get","category","type","payload","data","console","log"],"mappings":";;oDAIUA,Y;qDAMAC,a;;AAVV,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;;AAGA,SAAUJ,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMI,UAAU,CAAC,qBAAD,EAAwBH,aAAxB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAIA;AACA;;;AACA,SAAUA,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGuB,iBAAMC,KAAK,CAACG,GAAN,CAAU,eAAV,CAAN;;AAHvB;AAGYC,UAAAA,QAHZ;AAAA;AAIM,iBAAMH,GAAG,CAAC;AACRI,YAAAA,IAAI,EAAE,mBADE;AAERC,YAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFV,WAAD,CAAT;;AAJN;AAAA;AAAA;;AAAA;AAAA;AAAA;AASMC,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,eAAeX,YAAf","sourcesContent":["import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n\nfunction* categorySaga() {\n  yield takeLatest('FETCH_CATEGORY_LIST', fetchCategory);\n}\n\n// worker Saga: will be fired on \"FETCH_CATEGORY\" actions\n// GET categories to display in category dropdown on add artwork\nfunction* fetchCategory() {\n    try {\n      // this retrives category list and save it in store\n      const category = yield axios.get('/api/category');\n      yield put({ \n        type: 'SET_CATEGORY_LIST', \n        payload: category.data \n        });\n    } catch (error) {\n      console.log('Category get request failed', error);\n    }\n}\n\nexport default categorySaga;\n"]},"metadata":{},"sourceType":"module"}