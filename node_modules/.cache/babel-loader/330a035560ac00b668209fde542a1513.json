{"ast":null,"code":"import _regeneratorRuntime from \"/Users/j.lin/prime/tier3/art-galore-solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(awsSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(postImageUrl);\n\nimport axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction awsSaga() {\n  return _regeneratorRuntime.wrap(function awsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeLatest('POST_IMAGE_URL', postImageUrl);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n} // Posts an image url from AWS to Database\n\n\nfunction postImageUrl(action) {\n  var config, data, response;\n  return _regeneratorRuntime.wrap(function postImageUrl$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            withCredentials: true\n          };\n          data = {\n            aws: action.payload\n          };\n          _context2.next = 5;\n          return axios.post('/api/aws', data, config);\n\n        case 5:\n          response = _context2.sent;\n          console.log(response);\n          _context2.next = 12;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log('Image URL POST failed: ', _context2.t0);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n\nexport default awsSaga;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/redux/sagas/aws.saga.js"],"names":["awsSaga","postImageUrl","axios","put","takeLatest","action","config","headers","withCredentials","data","aws","payload","post","response","console","log"],"mappings":";;oDAGUA,O;qDAKAC,Y;;AARV,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;;AAEA,SAAUJ,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMI,UAAU,CAAC,gBAAD,EAAmBH,YAAnB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAIA;;;AACA,SAAUA,YAAV,CAAuBI,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEUC,UAAAA,MAFV,GAEmB;AACbC,YAAAA,OAAO,EAAE;AAAE,8BAAgB;AAAlB,aADI;AAEbC,YAAAA,eAAe,EAAE;AAFJ,WAFnB;AAMUC,UAAAA,IANV,GAMiB;AAAEC,YAAAA,GAAG,EAAEL,MAAM,CAACM;AAAd,WANjB;AAAA;AAOqB,iBAAMT,KAAK,CAACU,IAAN,CAAW,UAAX,EAAuBH,IAAvB,EAA6BH,MAA7B,CAAN;;AAPrB;AAOUO,UAAAA,QAPV;AAQIC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AARJ;AAAA;;AAAA;AAAA;AAAA;AAUIC,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAef,OAAf","sourcesContent":["import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* awsSaga(){\n  yield takeLatest('POST_IMAGE_URL', postImageUrl)\n}\n\n// Posts an image url from AWS to Database\nfunction* postImageUrl(action){\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n    const data = { aws: action.payload}\n    const response = yield axios.post('/api/aws', data, config);\n    console.log(response);\n  } catch (error) {\n    console.log('Image URL POST failed: ', error);\n  }\n\n}\n\nexport default awsSaga;"]},"metadata":{},"sourceType":"module"}