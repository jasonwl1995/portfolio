{"ast":null,"code":"import _slicedToArray from \"/Users/j.lin/prime/tier3/art-galore-solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/j.lin/prime/tier3/art-galore-solo/src/components/AddArtworkForm/AddArtworkForm.jsx\";\n\n/* Import Libraries */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { generatePath, Link } from 'react-router-dom';\nimport ImageUpload from '../ImageUpload/ImageUpload';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css'; // MATERIAL UI\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { borders } from '@material-ui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      height: 140,\n      width: 100\n    },\n    control: {\n      padding: theme.spacing(2)\n    },\n    img: {\n      maxWidth: '100%',\n      maxHeight: '100%'\n    }\n  };\n}); // Function allows the user to add their own artwork to the database\n\nfunction AddArtworkForm() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _React$useState = React.useState(2),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      spacing = _React$useState2[0],\n      setSpacing = _React$useState2[1]; // Grabs information from Global Redex Store\n\n\n  var category = useSelector(function (store) {\n    return store.category;\n  });\n  var user = useSelector(function (store) {\n    return store.user;\n  });\n  var artworkImage = useSelector(function (store) {\n    return store.aws;\n  }); //Local store variables that captures from inputs\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      artworkTitle = _useState2[0],\n      setArtworkTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      artworkDate = _useState4[0],\n      setArtworkDate = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      artworkDescription = _useState6[0],\n      setArtworkDescription = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      artworkCategory = _useState8[0],\n      setArtworkCategory = _useState8[1];\n  /* Function captures form input values and sends data to\n     the database to be stored in the \"artwork\" table */\n\n\n  var addArtwork = function addArtwork(evt) {\n    // Keeps page from refreshing on form submission\n    evt.preventDefault(); // Ping saga to add artwork to database\n\n    dispatch({\n      type: 'ADD_ARTWORK',\n      payload: {\n        id: user.id,\n        title: artworkTitle,\n        date: artworkDate,\n        image: artworkImage,\n        description: artworkDescription,\n        category_id: artworkCategory\n      }\n    }); // Clears input fields upon adding the artwork to database\n\n    setArtworkTitle('');\n    setArtworkDate('');\n    setArtworkDescription('');\n    setArtworkCategory('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add an Artwork\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addArtwork,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"artworkTitle\",\n              children: \"Artwork Title: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"artworkTitle\",\n              type: \"text\",\n              placeholder: \"Artwork Title\",\n              value: artworkTitle,\n              onChange: function onChange(evt) {\n                return setArtworkTitle(evt.target.value);\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"artworkImage\",\n              children: \"Artwork Image: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"(Click or Drag'n'Drop)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(ImageUpload, {\n              page: \"AddArtworkImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"artworkDate\",\n              children: \"Date Created: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: artworkDate,\n              placeholderText: \"Select a Date\",\n              onChange: function onChange(date) {\n                return setArtworkDate(date);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"artworkDescription\",\n              children: \"Artwork Description: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"artworkDescription\",\n              placeholder: \"Artwork Description:\",\n              value: artworkDescription,\n              onChange: function onChange(evt) {\n                return setArtworkDescription(evt.target.value);\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"artworkCategory\",\n              children: \"Select Category: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"artworkCategory\",\n              placeholder: \"--- Categories ---\",\n              value: artworkCategory,\n              onChange: function onChange(evt) {\n                return setArtworkCategory(evt.target.value);\n              },\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"--- Select A Category ---\"\n              }, \"-1\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), category && category.length && category.map(function (cat, i) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: cat.id,\n                  children: cat.theme\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 25\n                }, _this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              value: \"Add Artwork\",\n              children: \"Add Artwork\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\nexport default AddArtworkForm;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/components/AddArtworkForm/AddArtworkForm.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","generatePath","Link","ImageUpload","DatePicker","makeStyles","Grid","Typography","Box","Button","borders","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","img","maxWidth","maxHeight","AddArtworkForm","dispatch","classes","setSpacing","category","store","user","artworkImage","aws","artworkTitle","setArtworkTitle","artworkDate","setArtworkDate","artworkDescription","setArtworkDescription","artworkCategory","setArtworkCategory","addArtwork","evt","preventDefault","type","payload","id","title","date","image","description","category_id","target","value","length","map","cat","i"],"mappings":"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","sourcesContent":["/* Import Libraries */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { generatePath, Link } from 'react-router-dom';\nimport ImageUpload from '../ImageUpload/ImageUpload';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n// MATERIAL UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { borders } from '@material-ui/system';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  img: {\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\n// Function allows the user to add their own artwork to the database\nfunction AddArtworkForm() {\n  const dispatch = useDispatch();\n \n  const classes = useStyles();\n  const [spacing, setSpacing] = React.useState(2);\n\n  // Grabs information from Global Redex Store\n  const category = useSelector(store => store.category);\n  const user = useSelector(store => store.user);\n  const artworkImage = useSelector(store => store.aws);\n\n  //Local store variables that captures from inputs\n  const [artworkTitle, setArtworkTitle] = useState('');\n  const [artworkDate, setArtworkDate] = useState('');\n  const [artworkDescription, setArtworkDescription] = useState('');\n  const [artworkCategory, setArtworkCategory] = useState('');\n  \n  /* Function captures form input values and sends data to\n     the database to be stored in the \"artwork\" table */\n  const addArtwork = (evt) => {\n    // Keeps page from refreshing on form submission\n    evt.preventDefault();\n\n    // Ping saga to add artwork to database\n    dispatch({\n      type: 'ADD_ARTWORK',\n      payload: {\n        id: user.id,\n        title: artworkTitle,\n        date: artworkDate,\n        image: artworkImage,\n        description: artworkDescription,\n        category_id: artworkCategory,\n      }\n    })\n    // Clears input fields upon adding the artwork to database\n    setArtworkTitle('');\n    setArtworkDate('');\n    setArtworkDescription('');\n    setArtworkCategory('');\n  };\n\n  return (\n    <div>\n      <h3>Add an Artwork</h3>\n      <form onSubmit={addArtwork}>\n        <table>\n\n        {/* Input field to add artwork title */}\n          <tr>\n            <td>\n              <label htmlFor=\"artworkTitle\">Artwork Title: </label>\n            </td>\n            <td>\n              <input\n              name=\"artworkTitle\"\n              type=\"text\"\n              placeholder=\"Artwork Title\"\n              value={artworkTitle}\n              onChange={(evt) => setArtworkTitle(evt.target.value)}\n              required\n              />\n            </td>\n          </tr>\n\n        {/* Input field for users to drag & drop the artwork image, stores using AWS API */}\n          <tr>\n            <td>\n            <label htmlFor=\"artworkImage\">Artwork Image: </label>\n            <p>(Click or Drag'n'Drop)</p>\n            </td>\n            <td>\n              <ImageUpload page=\"AddArtworkImage\" />\n            </td>\n          </tr>\n\n          {/* Input field for users to add the date the artwork was created */}\n          <tr>\n            <td>\n              <label htmlFor=\"artworkDate\">Date Created: </label>\n            </td>\n            <td>\n              <DatePicker selected={artworkDate} placeholderText=\"Select a Date\" onChange={date => setArtworkDate(date)} />\n            </td>\n          </tr>\n\n          {/* Input field to add Artwork description */}\n          <tr>\n            <td>\n              <label htmlFor=\"artworkDescription\">Artwork Description: </label>\n            </td>\n            <td>\n              <textarea\n              name=\"artworkDescription\"\n              placeholder=\"Artwork Description:\"\n              value={artworkDescription}\n              onChange={(evt) => setArtworkDescription(evt.target.value)}\n              required\n              />\n            </td>\n          </tr>\n\n          {/* Dropdown List for users to chose a artwork category */}\n          <tr>\n            <td>\n              <label htmlFor=\"artworkCategory\">Select Category: </label>\n            </td>\n            <td>\n              <select \n                name=\"artworkCategory\" \n                placeholder=\"--- Categories ---\"\n                value={artworkCategory}\n                onChange={(evt) => setArtworkCategory(evt.target.value)}\n                required\n                >\n                <option key=\"-1\" value=\"\">--- Select A Category ---</option>\n                {\n                  category && category.length && category.map((cat, i) => {\n                    return (\n                        <option key={i} value={cat.id}>{cat.theme}</option>\n                      )\n                    })\n                }\n              </select>\n            </td>\n          </tr>\n\n          {/* Button to submit user inputs as a new artwork onto the database\n          and clearing fields to be ready to add the next artwork */}\n          <tr>\n            <td>\n              <button\n                type=\"submit\"\n                value='Add Artwork'\n              >\n                Add Artwork\n              </button>\n            </td>\n          </tr>\n\n        </table>\n      </form>\n\n    </div>\n  );\n}\n\nexport default AddArtworkForm;"]},"metadata":{},"sourceType":"module"}