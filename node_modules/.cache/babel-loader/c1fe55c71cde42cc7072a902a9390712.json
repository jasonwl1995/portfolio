{"ast":null,"code":"var _jsxFileName = \"/Users/j.lin/prime/tier3/art-galore-solo/src/components/Nav/DropdownNavCategory.jsx\";\nimport { useDispatch, useSelector } from 'react-redux'; //import { generatePath, Link } from 'react-router-dom';\n\nimport { useHistory } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DropdownNavCategory(props) {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var history = useHistory(); // Grabs information from Global Redex Store\n\n  var user = useSelector(function (store) {\n    return store.user;\n  });\n  var userList = useSelector(function (store) {\n    return store.userList;\n  });\n  var activecategory = useSelector(function (store) {\n    return store.activeCategory;\n  }); // (STRETCH TO ADD DROP DOWN CATEGORY LIST)\n  // Get user list to populate drop-down list\n\n  useEffect(function () {\n    dispatch({\n      type: 'FETCH_ACTIVE_CATEGORY',\n      payload: {\n        userId: user.id\n      }\n    });\n  }, []); // Upon select a user from drop down list, then go to the discover page\n\n  var handleCategoryChange = function handleCategoryChange(evt) {\n    var newCategory = evt.target.value;\n    categoryChange(newCategory); //history.push(`/discoveruser/${newUser}`);\n  };\n\n  var categoryChange = function categoryChange(newCategory) {\n    if (props.discover_userId === \"all\") //fetch artworks by category \n      {\n        dispatch({\n          type: 'FETCH_ACTIVE_ARTWORK',\n          payload: {\n            categoryId: newCategory,\n            userId: user.id\n          }\n        }); // Save this action in store\n\n        dispatch({\n          type: 'SET_PREVIOUS_ACTION',\n          payload: {\n            actionType: 'FETCH_ACTIVE_ARTWORK',\n            categoryId: newCategory,\n            userId: user.id,\n            discover_userId: props.discover_userId\n          }\n        });\n      } else {\n      // Fetch artworks by category and by userId\n      dispatch({\n        type: 'FETCH_ACTIVE_ARTWORK_BY_USER',\n        payload: {\n          categoryId: newCategory,\n          userId: user.id,\n          discover_userId: props.discover_userId\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"categorySelect\",\n      placeholder: \"--- Select A Category ---\",\n      onChange: handleCategoryChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--- Select A Category ---\"\n      }, \"-1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), activecategory && activecategory.length && activecategory.map(function (cat, i) {\n        return Number(cat.category_count) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat.id,\n            children: [cat.theme, \" - \", cat.id]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\nexport default DropdownNavCategory;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/components/Nav/DropdownNavCategory.jsx"],"names":["useDispatch","useSelector","useHistory","React","useState","useEffect","DropdownNavCategory","props","dispatch","history","user","store","userList","activecategory","activeCategory","type","payload","userId","id","handleCategoryChange","evt","newCategory","target","value","categoryChange","discover_userId","categoryId","actionType","length","map","cat","i","Number","category_count","theme"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\n//import { generatePath, Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\nfunction DropdownNavCategory(props) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // Grabs information from Global Redex Store\n  const user = useSelector(store => store.user);\n  const userList = useSelector(store => store.userList);\n  const activecategory = useSelector(store => store.activeCategory);\n\n  // (STRETCH TO ADD DROP DOWN CATEGORY LIST)\n  // Get user list to populate drop-down list\n   useEffect(() => {\n     dispatch({\n       type: 'FETCH_ACTIVE_CATEGORY',\n       payload: {userId: user.id},\n     });\n   }, []);\n\n   // Upon select a user from drop down list, then go to the discover page\n   const handleCategoryChange = (evt) => {\n    let newCategory = evt.target.value;\n    categoryChange(newCategory);\n    //history.push(`/discoveruser/${newUser}`);\n\n  };\n\n  const categoryChange = (newCategory) => {\n    if (props.discover_userId === \"all\")  //fetch artworks by category \n    {\n        dispatch({\n            type: 'FETCH_ACTIVE_ARTWORK',\n            payload: {\n              categoryId: newCategory,\n              userId: user.id,\n            }\n          });\n\n        // Save this action in store\n        dispatch({\n          type: 'SET_PREVIOUS_ACTION',\n          payload: {\n            actionType: 'FETCH_ACTIVE_ARTWORK',\n            categoryId: newCategory,\n            userId: user.id,\n            discover_userId: props.discover_userId\n          }\n        });\n\n    }\n    else {  // Fetch artworks by category and by userId\n      dispatch({\n          type: 'FETCH_ACTIVE_ARTWORK_BY_USER',\n          payload: {\n            categoryId: newCategory,\n            userId: user.id,\n            discover_userId: props.discover_userId\n          }\n        });\n    }\n\n  }\n\n  return (\n    <>\n      {\n\n        <select \n        name=\"categorySelect\" \n        placeholder=\"--- Select A Category ---\"\n        onChange={handleCategoryChange}\n        >\n\n        {/* Dropdown list of categories */}\n        <option key=\"-1\" value=\"\">--- Select A Category ---</option>\n        {\n            activecategory && activecategory.length && activecategory.map((cat, i) => {\n                return (\n                (Number(cat.category_count) > 0)?\n                <> \n                <option key={i} value={cat.id}>{cat.theme} - {cat.id}</option>\n                </>\n                :\n                <></>\n                )\n        })\n        }\n        </select>\n      }\n    </>\n  );\n}\n\nexport default DropdownNavCategory;"]},"metadata":{},"sourceType":"module"}