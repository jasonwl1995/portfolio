{"ast":null,"code":"var _jsxFileName = \"/Users/j.lin/prime/tier3/art-galore-solo/src/components/Nav/DropdownNavCategory.jsx\";\nimport { useDispatch, useSelector } from 'react-redux'; //import { generatePath, Link } from 'react-router-dom';\n\nimport { useHistory } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DropdownNavCategory(props) {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var user = useSelector(function (store) {\n    return store.user;\n  });\n  var userList = useSelector(function (store) {\n    return store.userList;\n  });\n  var activecategory = useSelector(function (store) {\n    return store.activeCategory;\n  });\n  console.log(\"from nav category, params is\", props); // (STRETCH TO ADD DROP DOWN USER LIST)\n  //get user list to populate drop-down list\n\n  useEffect(function () {\n    dispatch({\n      type: 'FETCH_ACTIVE_CATEGORY',\n      payload: {\n        userId: user.id\n      }\n    });\n  }, []); ///try to put theme drop down list here\n  //upon select a user from drop down list, then go to the discover page\n\n  var handleCategoryChange = function handleCategoryChange(evt) {\n    //go to discover user page\n    //console.log('which user to discover:', uid);\n    var newCategory = evt.target.value;\n    categoryChange(newCategory); //history.push(`/discoveruser/${newUser}`);\n  };\n\n  var categoryChange = function categoryChange(newCategory) {\n    console.log(\"props=\", props);\n    console.log(\"newCategory=\", newCategory);\n\n    if (props.discover_userId === \"all\") //fetch artworks by category \n      {\n        dispatch({\n          type: 'FETCH_ACTIVE_ARTWORK',\n          payload: {\n            categoryId: newCategory,\n            userId: user.id\n          }\n        }); //save this action in store\n\n        dispatch({\n          type: 'SET_PREVIOUS_ACTION',\n          payload: {\n            actionType: 'FETCH_ACTIVE_ARTWORK',\n            categoryId: newCategory,\n            userId: user.id,\n            discover_userId: props.discover_userId\n          }\n        });\n      } else {\n      ////fetch artworks by category and by userId\n      dispatch({\n        type: 'FETCH_ACTIVE_ARTWORK_BY_USER',\n        payload: {\n          categoryId: newCategory,\n          userId: user.id,\n          discover_userId: props.discover_userId\n        }\n      });\n    }\n  }; //testing\n\n\n  console.log(\"active cat=\", activecategory);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"categorySelect\",\n      placeholder: \"--- Select A Category ---\",\n      onChange: handleCategoryChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--- Select A Category ---\"\n      }, \"-1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), activecategory && activecategory.length && activecategory.map(function (cat, i) {\n        return Number(cat.category_count) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat.id,\n            children: [cat.theme, \" - \", cat.id]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\nexport default DropdownNavCategory;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/components/Nav/DropdownNavCategory.jsx"],"names":["useDispatch","useSelector","useHistory","React","useState","useEffect","DropdownNavCategory","props","dispatch","history","user","store","userList","activecategory","activeCategory","console","log","type","payload","userId","id","handleCategoryChange","evt","newCategory","target","value","categoryChange","discover_userId","categoryId","actionType","length","map","cat","i","Number","category_count","theme"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\n//import { generatePath, Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\nfunction DropdownNavCategory(props) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const user = useSelector(store => store.user);\n  const userList = useSelector(store => store.userList);\n\n  const activecategory = useSelector(store => store.activeCategory);\n\n  console.log(\"from nav category, params is\", props);\n\n\n  // (STRETCH TO ADD DROP DOWN USER LIST)\n  //get user list to populate drop-down list\n   useEffect(() => {\n     dispatch({\n       type: 'FETCH_ACTIVE_CATEGORY',\n       payload: {userId: user.id},\n     });\n   }, []);\n\n   ///try to put theme drop down list here\n   //upon select a user from drop down list, then go to the discover page\n   const handleCategoryChange = (evt) => {\n    //go to discover user page\n    //console.log('which user to discover:', uid);\n\n    let newCategory = evt.target.value;\n    categoryChange(newCategory);\n    //history.push(`/discoveruser/${newUser}`);\n\n  };\n\n  const categoryChange = (newCategory) => {\n\n    console.log(\"props=\", props);\n    console.log(\"newCategory=\", newCategory);\n\n    if (props.discover_userId === \"all\")  //fetch artworks by category \n    {\n        dispatch({\n            type: 'FETCH_ACTIVE_ARTWORK',\n            payload: {\n              categoryId: newCategory,\n              userId: user.id,\n            }\n          });\n\n        //save this action in store\n        dispatch({\n          type: 'SET_PREVIOUS_ACTION',\n          payload: {\n            actionType: 'FETCH_ACTIVE_ARTWORK',\n            categoryId: newCategory,\n            userId: user.id,\n            discover_userId: props.discover_userId\n          }\n        });\n\n    }\n    else {  ////fetch artworks by category and by userId\n      dispatch({\n          type: 'FETCH_ACTIVE_ARTWORK_BY_USER',\n          payload: {\n            categoryId: newCategory,\n            userId: user.id,\n            discover_userId: props.discover_userId\n          }\n        });\n    }\n\n  }\n\n     //testing\n     console.log(\"active cat=\", activecategory);\n\n  return (\n    <>\n      {\n\n        <select \n        name=\"categorySelect\" \n        placeholder=\"--- Select A Category ---\"\n        onChange={handleCategoryChange}\n        >\n        {/* <option key=\"-1\" value=\"\">--- Select A Category ---</option>\n        {\n            activecategory && activecategory.length && activecategory.map((cat, i) => {\n                return (\n                // only display category that are active\n                (Number(cat.active_count) > 0)? \n                <>\n                <option key={i} value={cat.id}>{cat.theme} - {cat.id}</option>\n                </>\n                :\n                <></>\n                )\n            })\n            \n        } */}\n        <option key=\"-1\" value=\"\">--- Select A Category ---</option>\n        {\n            activecategory && activecategory.length && activecategory.map((cat, i) => {\n                return (\n                (Number(cat.category_count) > 0)?\n                <> \n                <option key={i} value={cat.id}>{cat.theme} - {cat.id}</option>\n                </>\n                :\n                <></>\n                )\n\n        })\n        }\n\n        </select>\n\n        }\n    </>\n  );\n}\n\nexport default DropdownNavCategory;"]},"metadata":{},"sourceType":"module"}