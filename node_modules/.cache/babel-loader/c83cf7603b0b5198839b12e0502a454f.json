{"ast":null,"code":"import _slicedToArray from \"/Users/j.lin/prime/tier3/art-galore-solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/j.lin/prime/tier3/art-galore-solo/src/components/EditArtworkPage/EditArtworkPage.jsx\";\n\n/* Import Libraries */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, Link, useParams } from 'react-router-dom';\nimport ImageUpload from '../ImageUpload/ImageUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditArtworkPage() {\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var params = useParams();\n  var artworkId = params;\n  console.log('artworkID', artworkId);\n  /* Grab data from Redux store */\n\n  var detail = useSelector(function (store) {\n    return store.detail;\n  });\n  console.log('details', detail); // const category = useSelector((store) => store.category);\n\n  /* Local state variables used for capturing form input */\n\n  var _useState = useState(detail.title),\n      _useState2 = _slicedToArray(_useState, 2),\n      editTitle = _useState2[0],\n      setEditTitle = _useState2[1];\n\n  var _useState3 = useState(detail.image),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editImage = _useState4[0],\n      setEditImage = _useState4[1];\n\n  var _useState5 = useState(detail.date),\n      _useState6 = _slicedToArray(_useState5, 2),\n      editDate = _useState6[0],\n      setEditDate = _useState6[1];\n\n  var _useState7 = useState(detail.description),\n      _useState8 = _slicedToArray(_useState7, 2),\n      editDescription = _useState8[0],\n      setEditDescription = _useState8[1]; // const [editCategory, setEditCategory] = useState(artwork.category);\n  // const [editTitle, setEditTitle] = useState('');\n  // const [editImage, setEditImage] = useState('');\n  // const [editDate, setEditDate] = useState('');\n  // const [editDescription, setEditDescription] = useState('');\n\n\n  useEffect(function () {\n    dispatch({\n      type: 'FETCH_ARTWORK_DETAIL',\n      payload: {\n        artworkId: artworkId.id\n      }\n    });\n  }, []);\n  console.log('details', detail);\n\n  var editArtwork = function editArtwork(event) {\n    // Keep page from refreshing on form submission\n    event.preventDefault(); // Ping saga to update movie object in database\n\n    dispatch({\n      type: 'EDIT_ARTWORK',\n      payload: {\n        id: artwork.id,\n        title: editTitle,\n        // image: artworkImage,\n        date: editDate,\n        image: editImage,\n        description: editDescription // category_id: editCategory,\n\n      }\n    }); // Navigate to detail page\n    // history.push('/details');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"edit-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Artwork\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editArtwork,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"artworkTitle\",\n              children: \"Artwork Title: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"artworkTitle\",\n              type: \"text\",\n              placeholder: \"Artwork Title\",\n              value: editTitle,\n              onChange: function onChange(event) {\n                return setEditTitle(evt.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"artworkImage\",\n              children: \"Artwork Thumbnail URL: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"artworkImage\",\n              type: \"text\",\n              placeholder: \"Artwork Image URL\",\n              value: editImage,\n              onChange: function onChange(event) {\n                return setEditImage(evt.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"artworkDate\",\n              children: \"Artwork Date: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"artworkDate\",\n              type: \"text\",\n              placeholder: \"Artwork Date\",\n              value: editDate,\n              onChange: function onChange(event) {\n                return setEditDate(evt.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"artworkDescription\",\n              children: \"Artwork Description: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"artworkDescription\",\n              placeholder: \"Artwork Description:\",\n              value: editDescription,\n              onChange: function onChange(event) {\n                return setEditDescription(evt.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-button\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: function onClick() {\n                return history.push('/details');\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\nexport default EditArtworkPage;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/components/EditArtworkPage/EditArtworkPage.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","useHistory","Link","useParams","ImageUpload","EditArtworkPage","dispatch","history","params","artworkId","console","log","detail","store","title","editTitle","setEditTitle","image","editImage","setEditImage","date","editDate","setEditDate","description","editDescription","setEditDescription","type","payload","id","editArtwork","event","preventDefault","artwork","evt","target","value","push"],"mappings":"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","sourcesContent":["/* Import Libraries */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, Link, useParams } from 'react-router-dom';\nimport ImageUpload from '../ImageUpload/ImageUpload';\n\n\nfunction EditArtworkPage() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const params = useParams();\n  const artworkId = params;\nconsole.log('artworkID', artworkId);\n  /* Grab data from Redux store */\n  const detail = useSelector((store) => store.detail);\n  console.log('details', detail);\n  // const category = useSelector((store) => store.category);\n\n  /* Local state variables used for capturing form input */\n  const [editTitle, setEditTitle] = useState(detail.title);\n  const [editImage, setEditImage] = useState(detail.image);\n  const [editDate, setEditDate] = useState(detail.date);\n  const [editDescription, setEditDescription] = useState(detail.description);\n  // const [editCategory, setEditCategory] = useState(artwork.category);\n\n  // const [editTitle, setEditTitle] = useState('');\n  // const [editImage, setEditImage] = useState('');\n  // const [editDate, setEditDate] = useState('');\n  // const [editDescription, setEditDescription] = useState('');\n    useEffect(() => {\n    dispatch({\n      type: 'FETCH_ARTWORK_DETAIL',\n      payload: {artworkId: artworkId.id}\n    });\n  }, []);\n  console.log('details', detail);\n\n  const editArtwork = (event) => {\n    // Keep page from refreshing on form submission\n    event.preventDefault();\n\n    // Ping saga to update movie object in database\n    dispatch({\n      type: 'EDIT_ARTWORK',\n      payload: {\n        id: artwork.id,\n        title: editTitle,\n        // image: artworkImage,\n        date: editDate,\n        image: editImage,\n        description: editDescription,\n        // category_id: editCategory,\n      },\n    });\n\n    // Navigate to detail page\n    // history.push('/details');\n  };\n\n  return (\n    <section className=\"edit-page\">\n      <h2>Edit Artwork</h2>\n      {/* <img\n        src={movie.poster}\n        alt={movie.title}\n        className=\"details-poster-size\"\n      /> */}\n      <form onSubmit={editArtwork}>\n        <table>\n          <tr>\n            <td>\n              <label htmlFor=\"artworkTitle\">Artwork Title: </label>\n            </td>\n            <td>\n              <input\n              name=\"artworkTitle\"\n              type=\"text\"\n              placeholder=\"Artwork Title\"\n              value={editTitle}\n              onChange={(event) => setEditTitle(evt.target.value)}\n              />\n            </td>\n          </tr>\n\n          {/* <tr>\n            <td>\n            <label htmlFor=\"artworkImage\">Artwork Image: </label>\n            </td>\n            <td>\n              <ImageUpload />\n            </td>\n          </tr> */}\n\n          <tr>\n            <td>\n              <label htmlFor=\"artworkImage\">Artwork Thumbnail URL: </label>\n            </td>\n            <td>\n              <input\n              name=\"artworkImage\"\n              type=\"text\"\n              placeholder=\"Artwork Image URL\"\n              value={editImage}\n              onChange={(event) => setEditImage(evt.target.value)}\n              />\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n              <label htmlFor=\"artworkDate\">Artwork Date: </label>\n            </td>\n            <td>\n              <input\n              name=\"artworkDate\"\n              type=\"text\"\n              placeholder=\"Artwork Date\"\n              value={editDate}\n              onChange={(event) => setEditDate(evt.target.value)}\n              />\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n              <label htmlFor=\"artworkDescription\">Artwork Description: </label>\n            </td>\n            <td>\n              <textarea\n              name=\"artworkDescription\"\n              placeholder=\"Artwork Description:\"\n              value={editDescription}\n              onChange={(event) => setEditDescription(evt.target.value)}\n              />\n            </td>\n          </tr>\n\n        {/* Movie Genre */}\n        {/* <div>\n          <label htmlFor=\"movieGenre\">Genre:</label>\n          <select\n            name=\"movieGenre\"\n            id=\"movieGenre\"\n            value={editGenre}\n            onChange={(event) => setEditGenre(event.target.value)}\n          >\n            <option value=\"\">Select a Genre</option>\n            {genres.map((genre, i) => {\n              return (\n                <option key={i} value={genre.id}>\n                  {genre.name}\n                </option>\n              );\n            })}\n          </select>\n        </div> */}\n          <tr>\n            <td>\n              <button className=\"save-button\">Save</button>\n              {/* <input type=\"submit\" value=\"Save\" /> */}\n            </td>\n            <td>\n              <button onClick = {() => history.push('/details')}>\n                Cancel\n              </button>\n            </td>\n          </tr>\n        \n        </table>\n      </form>\n    </section>\n  );\n}\n\nexport default EditArtworkPage;\n\n"]},"metadata":{},"sourceType":"module"}