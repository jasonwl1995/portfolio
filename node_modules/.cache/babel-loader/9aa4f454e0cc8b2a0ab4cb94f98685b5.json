{"ast":null,"code":"var _jsxFileName = \"/Users/j.lin/prime/tier3/art-galore-solo/src/components/LikesGalleryPage/LikesGalleryPage.jsx\";\n\n/* Import Libraries */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom'; // Function fetches all artworks that a user likes\n// and displays it on the Likes Gallery Page\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LikesGalleryPage() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var params = useParams(); // Grabs information from Global Redex Store\n\n  var user = useSelector(function (store) {\n    return store.user;\n  });\n  var artworkList = useSelector(function (store) {\n    return store.artwork;\n  }); // Loads all artwork that the user likes\n\n  useEffect(function () {\n    dispatch({\n      type: 'FETCH_LIKE_ARTWORK',\n      payload: {\n        userId: user.id\n      }\n    });\n  }, []); // Function to unlike an artwork once Unlike button is clicked\n\n  var unlikeArtwork = function unlikeArtwork(artworkid) {\n    dispatch({\n      type: 'UNLIKE_ARTWORK',\n      payload: {\n        artworkId: artworkid,\n        userId: user.id\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Likes Galore!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"artwork\",\n        children: // Displays either users likes or if \n        // there are not likes, a message\n        artworkList && artworkList.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Here are your liked Artworks!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), artworkList.map(function (artwork, i) {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artworkdiv\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: artwork.image,\n                  height: \"350px\",\n                  weight: \"250px \",\n                  alt: artwork.description,\n                  onClick: function onClick() {\n                    return history.push(\"/details/\".concat(artwork.id));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 23\n                }, _this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: artwork.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: function onClick(evt) {\n                    unlikeArtwork(artwork.id);\n                  },\n                  children: \"Unlike\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true);\n          })]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // Display message if user has no artworks\n        _jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"You Have Not Liked Any Artworks Yet!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\nexport default LikesGalleryPage;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/components/LikesGalleryPage/LikesGalleryPage.jsx"],"names":["React","useEffect","useDispatch","useSelector","useHistory","useParams","LikesGalleryPage","dispatch","history","params","user","store","artworkList","artwork","type","payload","userId","id","unlikeArtwork","artworkid","artworkId","length","map","i","image","description","push","title","evt"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC,C,CAEA;AACA;;;;;AACA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAMM,OAAO,GAAGJ,UAAU,EAA1B;AACA,MAAMK,MAAM,GAAGJ,SAAS,EAAxB,CAH0B,CAK1B;;AACA,MAAMK,IAAI,GAAGP,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACD,IAAV;AAAA,GAAN,CAAxB;AACA,MAAME,WAAW,GAAGT,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACE,OAAV;AAAA,GAAN,CAA/B,CAP0B,CAS1B;;AACAZ,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAEN,IAAI,CAACO;AADN;AAFF,KAAD,CAAR;AAMD,GAPQ,EAON,EAPM,CAAT,CAV0B,CAmB5B;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAe;AACnCZ,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,OAAO,EAAE;AACPK,QAAAA,SAAS,EAAED,SADJ;AAEPH,QAAAA,MAAM,EAAEN,IAAI,CAACO;AAFN;AAFF,KAAD,CAAR;AAOD,GARD;;AAUE,sBACE;AAAA,2BACE;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEE;AAAS,QAAA,SAAS,EAAC,SAAnB;AAAA,kBAEM;AACA;AACCL,QAAAA,WAAW,IAAIA,WAAW,CAACS,MAA5B,gBACA;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAGAT,WAAW,CAACU,GAAZ,CAAgB,UAACT,OAAD,EAAUU,CAAV,EAAgB;AAC5B,gCACE;AAAA,sCACA;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACE;AAAK,kBAAA,GAAG,EAAEV,OAAO,CAACW,KAAlB;AAAyB,kBAAA,MAAM,EAAC,OAAhC;AAAwC,kBAAA,MAAM,EAAG,QAAjD;AAAyD,kBAAA,GAAG,EAAEX,OAAO,CAACY,WAAtE;AACA,kBAAA,OAAO,EAAE;AAAA,2BAAMjB,OAAO,CAACkB,IAAR,oBAAyBb,OAAO,CAACI,EAAjC,EAAN;AAAA;AADT;AAAA;AAAA;AAAA;AAAA;AADF,iBAAmCM,CAAnC;AAAA;AAAA;AAAA;AAAA,uBADA,eAOA;AAAA,uCACE;AAAA,4BAAKV,OAAO,CAACc;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBAPA,eAYA;AAAA,uCAGE;AAAQ,kBAAA,OAAO,EAAK,iBAACC,GAAD,EAAS;AAACV,oBAAAA,aAAa,CAACL,OAAO,CAACI,EAAT,CAAb;AAA0B,mBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,uBAZA;AAAA,4BADF;AAsBH,WAvBD,CAHA;AAAA,wBADA;AAAA;AA+BF;AACA;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AApCJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD;;AAED,eAAeX,gBAAf","sourcesContent":["/* Import Libraries */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\n\n// Function fetches all artworks that a user likes\n// and displays it on the Likes Gallery Page\nfunction LikesGalleryPage() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const params = useParams();\n  \n  // Grabs information from Global Redex Store\n  const user = useSelector(store => store.user);\n  const artworkList = useSelector(store => store.artwork);\n\n  // Loads all artwork that the user likes\n  useEffect(() => {\n    dispatch({\n      type: 'FETCH_LIKE_ARTWORK',\n      payload: {\n        userId: user.id\n      },\n    });\n  }, []);\n\n// Function to unlike an artwork once Unlike button is clicked\nconst unlikeArtwork = (artworkid) => {\n  dispatch({\n    type: 'UNLIKE_ARTWORK',\n    payload: {\n      artworkId: artworkid,\n      userId: user.id,\n    }\n  });\n};\n\n  return(\n    <div>\n      <main>\n      <h1>Likes Galore!</h1>\n        <section className=\"artwork\">\n            {\n              // Displays either users likes or if \n              // there are not likes, a message\n              (artworkList && artworkList.length)?\n              <> \n              <h2>Here are your liked Artworks!</h2>\n              { \n              artworkList.map((artwork, i) => {\n                  return (\n                    <>\n                    <div className=\"artworkdiv\" key = {i}>\n                      <img src={artwork.image} height=\"350px\" weight = \"250px \"alt={artwork.description} \n                      onClick={() => history.push(`/details/${artwork.id}`)}/>\n                    </div>\n\n                    {/* Displays artwork title */}\n                    <div>\n                      <h3>{artwork.title}</h3>\n                    </div>\n\n                    \n                    <div>\n                      {/* Button that calls unlikeArtwork function to \n                          remove artwork from likes table in database */}\n                      <button onClick = { (evt) => {unlikeArtwork(artwork.id)}}>\n                        Unlike\n                      </button>\n                    </div>\n                  </>\n                  );\n              })\n              }\n            </>\n            :\n            // Display message if user has no artworks\n            <>\n              <h3>You Have Not Liked Any Artworks Yet!</h3>\n            </>\n            }\n        </section>\n      </main>\n    </div>\n    );\n}\n\nexport default LikesGalleryPage;"]},"metadata":{},"sourceType":"module"}