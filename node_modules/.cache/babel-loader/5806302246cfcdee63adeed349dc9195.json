{"ast":null,"code":"import _slicedToArray from \"/Users/j.lin/prime/tier3/art-galore-solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/j.lin/prime/tier3/art-galore-solo/src/components/DiscoverUserPage/DiscoverUserPage.jsx\";\n\n/* Import Libraries */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport DropdownNav from '../Nav/DropdownNav';\nimport DropdownNavCategory from '../Nav/DropdownNavCategory';\nimport './GalleryPage.css'; // MATERIAL UI\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { borders } from '@material-ui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      height: 140,\n      width: 100\n    },\n    control: {\n      padding: theme.spacing(2)\n    },\n    img: {\n      maxWidth: '100%',\n      maxHeight: '91%'\n    }\n  };\n}); // Function fetches all artworks from a certain user\n// and displays it on the Discover Gallery Page\n\nfunction DiscoverUserPage() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var params = useParams();\n  var disUserId = params;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(2),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      spacing = _React$useState2[0],\n      setSpacing = _React$useState2[1]; // Grabs information from Global Redex Store\n\n\n  var artworkList = useSelector(function (store) {\n    return store.artwork;\n  });\n  var user = useSelector(function (store) {\n    return store.user;\n  }); // Loads all artwork from selected user\n\n  useEffect(function () {\n    dispatch({\n      type: 'FETCH_USER_ARTWORK',\n      payload: {\n        userid: disUserId.id\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        align: \"center\",\n        border: 1,\n        borderRadius: 16,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            align: \"center\",\n            lineHeight: 2,\n            fontWeight: \"fontWeightBold\",\n            children: [artworkList && artworkList.length && artworkList[0].username, \"'s Gallery!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            align: \"center\",\n            children: artworkList && artworkList.length && artworkList[0].intro\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          align: \"center\",\n          lineHeight: 4,\n          children: [\"Sort By Category:\", /*#__PURE__*/_jsxDEV(DropdownNavCategory, {\n            discover_userId: \"all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"artwork\",\n        children: // Makes sure artworkList is populated\n        artworkList && artworkList.length && artworkList.map(function (artwork, i) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"artworkdiv\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: artwork.image,\n                height: \"350px\",\n                weight: \"250px \",\n                alt: artwork.description,\n                onClick: function onClick() {\n                  return history.push(\"/details/\".concat(artwork.id));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, _this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: artwork.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 23\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: function onClick() {\n                  return history.push(\"/details/\".concat(artwork.id));\n                },\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 23\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n}\n\nexport default DiscoverUserPage;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/components/DiscoverUserPage/DiscoverUserPage.jsx"],"names":["React","useEffect","useDispatch","useSelector","useHistory","useParams","DropdownNav","DropdownNavCategory","makeStyles","Grid","Typography","Box","Button","Container","borders","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","img","maxWidth","maxHeight","DiscoverUserPage","dispatch","history","params","disUserId","classes","useState","setSpacing","artworkList","store","artwork","user","type","payload","userid","id","length","username","intro","map","i","image","description","push","title"],"mappings":"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","sourcesContent":["/* Import Libraries */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport DropdownNav from '../Nav/DropdownNav';\nimport DropdownNavCategory from '../Nav/DropdownNavCategory';\n\nimport './GalleryPage.css';\n\n// MATERIAL UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { borders } from '@material-ui/system';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  img: {\n    maxWidth: '100%',\n    maxHeight: '91%',\n  },\n}));\n\n// Function fetches all artworks from a certain user\n// and displays it on the Discover Gallery Page\nfunction DiscoverUserPage() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const params = useParams();\n  const disUserId = params;\n  \n  const classes = useStyles();\n  const [spacing, setSpacing] = React.useState(2);\n\n  // Grabs information from Global Redex Store\n  const artworkList = useSelector(store => store.artwork);\n  const user = useSelector((store) => store.user);\n\n  // Loads all artwork from selected user\n  useEffect(() => {\n    dispatch({\n      type: 'FETCH_USER_ARTWORK',\n      payload: { \n        userid: disUserId.id \n        }\n    });\n  }, []);\n\nreturn(\n  <div>\n    <main>\n    <Box align=\"center\" border={1} borderRadius={16}>\n      <Typography variant=\"h3\">\n          <Box align=\"center\" lineHeight={2} fontWeight=\"fontWeightBold\">\n            {artworkList && artworkList.length &&\n            artworkList[0].username}'s Gallery!\n          </Box>\n        </Typography>\n        \n        <Typography variant=\"body1\">\n          <Box align=\"center\">\n            {artworkList && artworkList.length &&\n            artworkList[0].intro}\n          </Box>\n        </Typography>\n\n      </Box>\n\n        <Typography variant=\"body1\">\n          <Box align=\"center\" lineHeight={4}>\n            Sort By Category: \n            <DropdownNavCategory discover_userId=\"all\"/>\n          </Box>\n        </Typography>\n      {/* Displays artist name */}\n      {/* <h1>{artworkList && artworkList.length &&\n      artworkList[0].username}'s Gallery!</h1> */}\n\n      {/* Display artist introduction */}\n      {/* <h2>{artworkList && artworkList.length &&\n      artworkList[0].intro}</h2> */}\n\n      {/* Displays a dropdown list of all other users \n          with at least 1 artwork in their gallery\n      <div>\n        <p>Search By Username:</p>\n        <DropdownNav />\n      </div>\n       */}\n\n        {/* Displays a dropdown list of all categories \n            with at least 1 artwork in that category */}\n        {/* <div>\n          <p>Sort By Category:</p>\n          <DropdownNavCategory discover_userId={disUserId.id}/>\n        </div> */}\n\n        {/* Displays artworks from selected\n            users onto the discover users page */}\n        <section className=\"artwork\">\n            {\n              // Makes sure artworkList is populated\n              artworkList && artworkList.length && \n              artworkList.map((artwork, i) => {\n                  return (\n                    <>\n                    <div className=\"artworkdiv\" key = {i}>\n                      <img src={artwork.image} height=\"350px\" weight = \"250px \"alt={artwork.description} \n                      onClick={() => history.push(`/details/${artwork.id}`)}/>\n                    </div>\n\n                    {/* Displays artwork title */}\n                    <div>\n                      <h3>{artwork.title}</h3>\n                    </div>\n\n                    {/* Button that takes user to the artwork details page */}\n                    <div>\n                      <button onClick={() => history.push(`/details/${artwork.id}`)}>\n                        Details\n                      </button>\n                    </div>\n\n                  </>\n                  );\n              })              \n            }\n        </section>\n    </main>\n  </div>\n  );\n}\n\nexport default DiscoverUserPage;\n"]},"metadata":{},"sourceType":"module"}