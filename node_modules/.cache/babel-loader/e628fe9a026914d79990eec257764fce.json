{"ast":null,"code":"import _regeneratorRuntime from \"/Users/j.lin/prime/tier3/art-galore-solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(artworkSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchUserArtwork),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(discoverGalleryArtwork),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(discoverUserArtwork),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(fetchArtworkDetails),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(addArtwork),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(editArtwork),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(deleteArtwork),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(fetchLikeArtworks),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(unlikeArtwork),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(likeArtworkDetail),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(unlikeArtworkDetail);\n\n/* Import Libraries */\nimport axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects'; // Creates rootSaga Generator function\n\nfunction artworkSaga() {\n  return _regeneratorRuntime.wrap(function artworkSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeLatest('FETCH_USER_ARTWORK', fetchUserArtwork);\n\n        case 2:\n          _context.next = 4;\n          return takeLatest('DISCOVER_GALLERY_ARTWORK', discoverGalleryArtwork);\n\n        case 4:\n          _context.next = 6;\n          return takeLatest('DISCOVER_USER_ARTWORK', discoverUserArtwork);\n\n        case 6:\n          _context.next = 8;\n          return takeLatest('FETCH_ARTWORK_DETAIL', fetchArtworkDetails);\n\n        case 8:\n          _context.next = 10;\n          return takeLatest('ADD_ARTWORK', addArtwork);\n\n        case 10:\n          _context.next = 12;\n          return takeLatest('EDIT_ARTWORK', editArtwork);\n\n        case 12:\n          _context.next = 14;\n          return takeLatest('DELETE_ARTWORK', deleteArtwork);\n\n        case 14:\n          _context.next = 16;\n          return takeLatest('FETCH_LIKE_ARTWORK', fetchLikeArtworks);\n\n        case 16:\n          _context.next = 18;\n          return takeLatest('UNLIKE_ARTWORK', unlikeArtwork);\n\n        case 18:\n          _context.next = 20;\n          return takeLatest('LIKE_ARTWORK_DETAIL', likeArtworkDetail);\n\n        case 20:\n          _context.next = 22;\n          return takeLatest('UNLIKE_ARTWORK_DETAIL', unlikeArtworkDetail);\n\n        case 22:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n} //  GET all logged in user artwork from database\n\n\nfunction fetchUserArtwork(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchUserArtwork$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return axios.get(\"/api/artwork/\".concat(action.payload.userid));\n\n        case 3:\n          response = _context2.sent;\n\n          if (!(response.status === 200)) {\n            _context2.next = 7;\n            break;\n          }\n\n          _context2.next = 7;\n          return put({\n            type: 'SET_ARTWORK',\n            payload: response.data\n          });\n\n        case 7:\n          _context2.next = 12;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log('fetch artwork request failed', _context2.t0);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n} // GET all artworks from database\n\n\nfunction discoverGalleryArtwork(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function discoverGalleryArtwork$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return axios.get(\"/api/artwork/discovergallery/\".concat(action.payload.userid));\n\n        case 3:\n          response = _context3.sent;\n\n          if (!(response.status === 200)) {\n            _context3.next = 7;\n            break;\n          }\n\n          _context3.next = 7;\n          return put({\n            type: 'SET_ARTWORK',\n            payload: response.data\n          });\n\n        case 7:\n          _context3.next = 12;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log('fetch other artwork request failed', _context3.t0);\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n} // GET artworks by user ID \n\n\nfunction discoverUserArtwork(action) {\n  var data, queryURL, response;\n  return _regeneratorRuntime.wrap(function discoverUserArtwork$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          data = action.payload;\n          queryURL = \"/api/discoveruser?userid=\".concat(action.payload.userid, \"&discover_userid=\").concat(data.discover_userid);\n          _context4.prev = 2;\n          _context4.next = 5;\n          return axios.get(queryURL);\n\n        case 5:\n          response = _context4.sent;\n\n          if (!(response.status === 200)) {\n            _context4.next = 9;\n            break;\n          }\n\n          _context4.next = 9;\n          return put({\n            type: 'SET_ARTWORK',\n            payload: response.data\n          });\n\n        case 9:\n          _context4.next = 14;\n          break;\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](2);\n          console.log('discoverUserArtwork request failed', _context4.t0);\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[2, 11]]);\n} // GET artwork detail from database\n\n\nfunction fetchArtworkDetails(action) {\n  var details;\n  return _regeneratorRuntime.wrap(function fetchArtworkDetails$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return axios.get(\"/api/artwork/\".concat(action.payload.userId, \"/\").concat(action.payload.artworkId));\n\n        case 3:\n          details = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: 'SET_DETAIL',\n            payload: details.data\n          });\n\n        case 6:\n          _context5.next = 11;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log('get detail error', _context5.t0);\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n} // POST new artwork to database\n\n\nfunction addArtwork(action) {\n  var data, response;\n  return _regeneratorRuntime.wrap(function addArtwork$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          data = action.payload;\n          _context6.prev = 1;\n          _context6.next = 4;\n          return axios.post('/api/artwork', data);\n\n        case 4:\n          response = _context6.sent;\n          _context6.next = 10;\n          break;\n\n        case 7:\n          _context6.prev = 7;\n          _context6.t0 = _context6[\"catch\"](1);\n          console.log('Category get request failed', _context6.t0);\n\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[1, 7]]);\n} // PUT updated artwork details in DB\n\n\nfunction editArtwork(action) {\n  return _regeneratorRuntime.wrap(function editArtwork$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return axios.put('/api/artwork/', action.payload);\n\n        case 3:\n          console.log(\"update success\");\n          _context7.next = 9;\n          break;\n\n        case 6:\n          _context7.prev = 6;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.log(' SAGA ERROR PUT', _context7.t0);\n\n        case 9:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 6]]);\n} // worker Saga: will be fired on \"DETELE_ARTWORK\" actions, artwork id should be in action.payload\n// DELETE an artwork from database\n\n\nfunction deleteArtwork(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function deleteArtwork$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return axios.delete(\"/api/artwork/\".concat(action.payload.artworkid));\n\n        case 3:\n          response = _context8.sent;\n\n          if (!(response.status === 200)) {\n            _context8.next = 7;\n            break;\n          }\n\n          _context8.next = 7;\n          return put({\n            //FETCHES USER ARTWORKS AGAIN WITHOUT DELETED TO DISPLAY ON DOM\n            type: 'FETCH_USER_ARTWORK',\n            payload: {\n              userid: action.payload.userid\n            }\n          });\n\n        case 7:\n          _context8.next = 12;\n          break;\n\n        case 9:\n          _context8.prev = 9;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.log('delete artwork request failed', _context8.t0);\n\n        case 12:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 9]]);\n} // GET all artworks liked by the user\n\n\nfunction fetchLikeArtworks(action) {\n  var data, response;\n  return _regeneratorRuntime.wrap(function fetchLikeArtworks$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          data = action.payload;\n          _context9.prev = 1;\n          _context9.next = 4;\n          return axios.get(\"/api/likes/\".concat(data.userId));\n\n        case 4:\n          response = _context9.sent;\n\n          if (!(response.status === 200)) {\n            _context9.next = 8;\n            break;\n          }\n\n          _context9.next = 8;\n          return put({\n            type: 'SET_LIKE_ARTWORK',\n            payload: response.data\n          });\n\n        case 8:\n          _context9.next = 13;\n          break;\n\n        case 10:\n          _context9.prev = 10;\n          _context9.t0 = _context9[\"catch\"](1);\n          console.log('fetchLikeArtwork request failed', _context9.t0);\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[1, 10]]);\n} // PUT or REMOVE liked image from LIKES PAGE\n\n\nfunction unlikeArtwork(action) {\n  var data, response;\n  return _regeneratorRuntime.wrap(function unlikeArtwork$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          data = action.payload;\n          _context10.prev = 1;\n          _context10.next = 4;\n          return axios.put('/api/likes/unlike', data);\n\n        case 4:\n          response = _context10.sent;\n\n          if (!(response.status === 200)) {\n            _context10.next = 9;\n            break;\n          }\n\n          console.log('ready to re-pull liked list', data.userId);\n          _context10.next = 9;\n          return put({\n            type: 'FETCH_LIKE_ARTWORK',\n            payload: {\n              userId: data.userId\n            }\n          });\n\n        case 9:\n          _context10.next = 14;\n          break;\n\n        case 11:\n          _context10.prev = 11;\n          _context10.t0 = _context10[\"catch\"](1);\n          console.log('unlikeArtwork request failed', _context10.t0);\n\n        case 14:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[1, 11]]);\n} // PUT artwork to like_log DB table from details page\n\n\nfunction likeArtworkDetail(action) {\n  var data, response;\n  return _regeneratorRuntime.wrap(function likeArtworkDetail$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          data = action.payload;\n          console.log('data', data);\n          _context11.prev = 2;\n          _context11.next = 5;\n          return axios.put('/api/likes/like', data);\n\n        case 5:\n          response = _context11.sent;\n\n          if (!(response.status === 200)) {\n            _context11.next = 9;\n            break;\n          }\n\n          _context11.next = 9;\n          return put({\n            type: 'FETCH_ARTWORK_DETAIL',\n            payload: {\n              artworkId: data.artworkId,\n              userId: data.userId\n            }\n          });\n\n        case 9:\n          _context11.next = 14;\n          break;\n\n        case 11:\n          _context11.prev = 11;\n          _context11.t0 = _context11[\"catch\"](2);\n          console.log('likeArtworkDetail request failed', _context11.t0);\n\n        case 14:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[2, 11]]);\n} // PUT or REMOVE liked image from Likes on DETAILS page\n\n\nfunction unlikeArtworkDetail(action) {\n  var data, response;\n  return _regeneratorRuntime.wrap(function unlikeArtworkDetail$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          data = action.payload;\n          console.log('unlikeArtworkDetail', data);\n          _context12.prev = 2;\n          _context12.next = 5;\n          return axios.put('/api/likes/unlike', data);\n\n        case 5:\n          response = _context12.sent;\n\n          if (!(response.status === 200)) {\n            _context12.next = 9;\n            break;\n          }\n\n          _context12.next = 9;\n          return put({\n            type: 'FETCH_ARTWORK_DETAIL',\n            payload: {\n              artworkId: data.artworkId,\n              userId: data.userId\n            }\n          });\n\n        case 9:\n          _context12.next = 14;\n          break;\n\n        case 11:\n          _context12.prev = 11;\n          _context12.t0 = _context12[\"catch\"](2);\n          console.log('unlikeArtworkDetail request failed', _context12.t0);\n\n        case 14:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12, null, [[2, 11]]);\n}\n\nexport default artworkSaga;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/redux/sagas/artwork.saga.js"],"names":["artworkSaga","fetchUserArtwork","discoverGalleryArtwork","discoverUserArtwork","fetchArtworkDetails","addArtwork","editArtwork","deleteArtwork","fetchLikeArtworks","unlikeArtwork","likeArtworkDetail","unlikeArtworkDetail","axios","put","takeLatest","action","get","payload","userid","response","status","type","data","console","log","queryURL","discover_userid","userId","artworkId","details","post","delete","artworkid"],"mappings":"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","sourcesContent":["/* Import Libraries */\nimport axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// Creates rootSaga Generator function\nfunction* artworkSaga() {\n  yield takeLatest('FETCH_USER_ARTWORK', fetchUserArtwork);\n  yield takeLatest('DISCOVER_GALLERY_ARTWORK', discoverGalleryArtwork);   // Discover gallery\n  yield takeLatest('DISCOVER_USER_ARTWORK', discoverUserArtwork);         // Discover user gallery\n\n  yield takeLatest('FETCH_ARTWORK_DETAIL', fetchArtworkDetails);\n\n  yield takeLatest('ADD_ARTWORK', addArtwork);\n  yield takeLatest('EDIT_ARTWORK', editArtwork);\n  yield takeLatest('DELETE_ARTWORK', deleteArtwork);\n\n  yield takeLatest('FETCH_LIKE_ARTWORK', fetchLikeArtworks);\n  yield takeLatest('UNLIKE_ARTWORK', unlikeArtwork);\n\n  yield takeLatest('LIKE_ARTWORK_DETAIL', likeArtworkDetail);\n  yield takeLatest('UNLIKE_ARTWORK_DETAIL', unlikeArtworkDetail);\n}\n\n//  GET all logged in user artwork from database\nfunction* fetchUserArtwork(action) {\n  try {\n    const response = yield axios.get(`/api/artwork/${action.payload.userid}`);\n    if (response.status === 200)\n    {\n      yield put({ type: 'SET_ARTWORK', payload: response.data});\n    }\n  } catch (error) {\n    console.log('fetch artwork request failed', error);\n  }\n}\n\n// GET all artworks from database\nfunction* discoverGalleryArtwork(action) {\n\n  try {\n    const response = yield axios.get(`/api/artwork/discovergallery/${action.payload.userid}`);\n    if (response.status === 200)\n    {\n      yield put({ type: 'SET_ARTWORK', payload: response.data});\n    }\n  } catch (error) {\n    console.log('fetch other artwork request failed', error);\n  }\n}\n\n// GET artworks by user ID \nfunction* discoverUserArtwork(action) {\n\n  const data = action.payload;\n  let queryURL = `/api/discoveruser?userid=${action.payload.userid}&discover_userid=${data.discover_userid}`;\n\n  try {\n    const response = yield axios.get(queryURL);\n    if (response.status === 200)\n    {\n      yield put({ type: 'SET_ARTWORK', payload: response.data});\n    }\n  } catch (error) {\n    console.log('discoverUserArtwork request failed', error);\n  }\n}\n\n// GET artwork detail from database\nfunction* fetchArtworkDetails(action){\n  try{\n    const details = yield axios.get(`/api/artwork/${action.payload.userId}/${action.payload.artworkId}`);\n    yield put({\n      type: 'SET_DETAIL',\n      payload: details.data,\n    });\n  } catch(err) {\n    console.log('get detail error', err);\n  }\n}\n\n// POST new artwork to database\nfunction* addArtwork(action) {\n    let data = action.payload;\n    try {\n      const response = \n        yield axios.post('/api/artwork', data);\n    } catch (error) {\n      console.log('Category get request failed', error);\n    }\n}\n\n// PUT updated artwork details in DB\nfunction* editArtwork(action) {\n  try {\n    yield axios.put('/api/artwork/', action.payload);\n    console.log(\"update success\");\n    \n  } catch (err) {\n    console.log(' SAGA ERROR PUT', err);\n  }\n}\n\n// worker Saga: will be fired on \"DETELE_ARTWORK\" actions, artwork id should be in action.payload\n// DELETE an artwork from database\nfunction* deleteArtwork(action) {\n  try {\n    const response = yield axios.delete(`/api/artwork/${action.payload.artworkid}`);\n    if (response.status === 200)\n    {\n      yield put({ \n        //FETCHES USER ARTWORKS AGAIN WITHOUT DELETED TO DISPLAY ON DOM\n        type: 'FETCH_USER_ARTWORK', \n        payload: {userid: action.payload.userid}\n      });\n    }\n\n  } catch (error) {\n    console.log('delete artwork request failed', error);\n  }\n}\n\n// GET all artworks liked by the user\nfunction* fetchLikeArtworks(action) {\n  let data = action.payload;\n  try {\n    const response = \n    yield axios.get(`/api/likes/${data.userId}`);\n    if (response.status === 200)\n    {\n      yield put({ \n        type: 'SET_LIKE_ARTWORK', \n        payload: response.data\n        });\n    }\n  } catch (error) {\n    console.log('fetchLikeArtwork request failed', error);\n  }\n}\n\n// PUT or REMOVE liked image from LIKES PAGE\nfunction* unlikeArtwork(action) {\n  let data = action.payload;\n  try {\n    const response = \n    yield axios.put('/api/likes/unlike', data);\n\n    if (response.status === 200)\n    {\n      console.log('ready to re-pull liked list', data.userId);\n      yield put({ \n        type: 'FETCH_LIKE_ARTWORK', \n        payload: {\n          userId: data.userId\n          }});\n    }\n  } catch (error) {\n    console.log('unlikeArtwork request failed', error);\n  }\n}\n\n// PUT artwork to like_log DB table from details page\nfunction* likeArtworkDetail(action) {\n  let data = action.payload;\n  console.log('data', data);\n  try {\n    const response = yield axios.put('/api/likes/like', data);\n\n    if (response.status === 200)\n    {\n      yield put({ \n        type: 'FETCH_ARTWORK_DETAIL', \n        payload: {\n          artworkId: data.artworkId, \n          userId: data.userId\n        }}); \n    }\n  } catch (error) {\n    console.log('likeArtworkDetail request failed', error);\n  }\n}\n\n// PUT or REMOVE liked image from Likes on DETAILS page\nfunction* unlikeArtworkDetail(action) {\n  let data = action.payload;\nconsole.log('unlikeArtworkDetail', data);\n  try {\n    const response = yield axios.put('/api/likes/unlike', data);\n\n    if (response.status === 200)\n    {\n      yield put({ \n        type: 'FETCH_ARTWORK_DETAIL', \n        payload: {\n          artworkId: data.artworkId, \n          userId: data.userId\n          }}); \n    }\n\n  } catch (error) {\n    console.log('unlikeArtworkDetail request failed', error);\n  }\n}\n\nexport default artworkSaga;"]},"metadata":{},"sourceType":"module"}