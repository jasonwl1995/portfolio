{"ast":null,"code":"var _jsxFileName = \"/Users/j.lin/prime/tier3/art-galore-solo/src/components/Nav/DropdownNav.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DropdownNav() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var user = useSelector(function (store) {\n    return store.user;\n  });\n  var userList = useSelector(function (store) {\n    return store.userList;\n  });\n  console.log('userlist', userList); //get user list to populate drop-down list\n\n  useEffect(function () {\n    dispatch({\n      type: 'FETCH_USER_LIST'\n    });\n  }, []); //upon select a user from drop down list, then go to the discover page\n\n  var handleChange = function handleChange(evt) {\n    //go to discover user page\n    var newUser = evt.target.value;\n    userChange(newUser);\n  }; //dispatch a message is better, not call history\n\n\n  var userChange = function userChange(newUser) {\n    dispatch({\n      type: 'DISCOVER_USER_ARTWORK',\n      payload: {\n        userid: user.id,\n        discover_userid: newUser\n      }\n    });\n    history.push(\"/discoveruser/\".concat(newUser));\n  };\n\n  console.log('artwork count', userList[0].artwork_count);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"userListSelect\",\n      placeholder: \"--- Select A User ---\",\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--- Select A User ---\"\n      }, \"-1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), userList && userList.length && userList.map(function (usr, i) {\n        return (// only display other users on the list? \n          usr.id !== user.id && Number(user.artwork_count) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: usr.id,\n              children: [usr.username, \" - \", usr.id]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        );\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\nexport default DropdownNav;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/components/Nav/DropdownNav.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","useHistory","DropdownNav","dispatch","history","user","store","userList","console","log","type","handleChange","evt","newUser","target","value","userChange","payload","userid","id","discover_userid","push","artwork_count","length","map","usr","i","Number","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,MAAMK,OAAO,GAAGH,UAAU,EAA1B;AAEA,MAAMI,IAAI,GAAGL,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACD,IAAV;AAAA,GAAN,CAAxB;AACA,MAAME,QAAQ,GAAGP,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,QAAV;AAAA,GAAN,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB,EANqB,CAQrB;;AACCT,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT,CAToB,CAepB;;AACD,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAS;AAC5B;AAEA,QAAIC,OAAO,GAAGD,GAAG,CAACE,MAAJ,CAAWC,KAAzB;AACAC,IAAAA,UAAU,CAACH,OAAD,CAAV;AAED,GAND,CAhBqB,CAwBrB;;;AACA,MAAMG,UAAU,GAAG,SAAbA,UAAa,CAACH,OAAD,EAAa;AAE9BV,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAE,uBADC;AAEPO,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAEb,IAAI,CAACc,EADN;AAEPC,QAAAA,eAAe,EAAEP;AAFV;AAFF,KAAD,CAAR;AAQAT,IAAAA,OAAO,CAACiB,IAAR,yBAA8BR,OAA9B;AAED,GAZD;;AAaAL,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,QAAQ,CAAE,CAAF,CAAR,CAAae,aAA1C;AACA,sBACE;AAAA,2BAGQ;AACA,MAAA,IAAI,EAAC,gBADL;AAEA,MAAA,WAAW,EAAC,uBAFZ;AAGA,MAAA,QAAQ,EAAEX,YAHV;AAAA,8BAKA;AAAiB,QAAA,KAAK,EAAC,EAAvB;AAAA;AAAA,SAAY,IAAZ;AAAA;AAAA;AAAA;AAAA,cALA,EAOIJ,QAAQ,IAAIA,QAAQ,CAACgB,MAArB,IAA+BhB,QAAQ,CAACiB,GAAT,CAAa,UAACC,GAAD,EAAMC,CAAN,EAAY;AACpD,eACA;AACED,UAAAA,GAAG,CAACN,EAAJ,KAAWd,IAAI,CAACc,EAAjB,IAAyBQ,MAAM,CAACtB,IAAI,CAACiB,aAAN,CAAN,GAA6B,CAAvD,gBACA;AAAA,mCACA;AAAgB,cAAA,KAAK,EAAEG,GAAG,CAACN,EAA3B;AAAA,yBAAgCM,GAAG,CAACG,QAApC,SAAiDH,GAAG,CAACN,EAArD;AAAA,eAAaO,CAAb;AAAA;AAAA;AAAA;AAAA;AADA,2BADA,gBAKA;AAPA;AASH,OAV8B,CAPnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR,mBADF;AA4BD;;AAED,eAAexB,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nfunction DropdownNav() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const user = useSelector(store => store.user);\n  const userList = useSelector(store => store.userList);\n  console.log('userlist', userList);\n\n  //get user list to populate drop-down list\n   useEffect(() => {\n     dispatch({\n       type: 'FETCH_USER_LIST'\n     });\n   }, []);\n\n   //upon select a user from drop down list, then go to the discover page\n  const handleChange = (evt) => {\n    //go to discover user page\n\n    let newUser = evt.target.value;\n    userChange(newUser);\n\n  };\n\n  //dispatch a message is better, not call history\n  const userChange = (newUser) => {\n\n    dispatch({\n      type: 'DISCOVER_USER_ARTWORK',\n      payload: {\n        userid: user.id,\n        discover_userid: newUser,\n      }\n    });\n\n    history.push(`/discoveruser/${newUser}`);\n\n  }\n  console.log('artwork count', userList.[0].artwork_count);\n  return (\n    <>\n      {\n\n            <select \n            name=\"userListSelect\" \n            placeholder=\"--- Select A User ---\"\n            onChange={handleChange}\n            >\n            <option key=\"-1\" value=\"\">--- Select A User ---</option>\n            {\n                userList && userList.length && userList.map((usr, i) => {\n                    return (\n                    // only display other users on the list? \n                    ((usr.id !== user.id) && (Number(user.artwork_count) > 0))? \n                    <>\n                    <option key={i} value={usr.id}>{usr.username} - {usr.id}</option>\n                    </>\n                    :\n                    <></>\n                    )\n                })\n                \n            }\n            </select>\n        }\n    </>\n  );\n}\n\nexport default DropdownNav;"]},"metadata":{},"sourceType":"module"}