{"ast":null,"code":"import _regeneratorRuntime from \"/Users/j.lin/prime/tier3/art-galore-solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(categorySaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchCategory);\n\nimport axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction categorySaga() {\n  return _regeneratorRuntime.wrap(function categorySaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeLatest('FETCH_CATEGORY_LIST', fetchCategory);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n} //how to use a global flag??\n\n\nvar DEBUG = true; // worker Saga: will be fired on \"FETCH_CATEGORY\" actions\n\nfunction fetchCategory() {\n  var category;\n  return _regeneratorRuntime.wrap(function fetchCategory$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (DEBUG) {\n            console.log('start of fetchCategory');\n          }\n\n          _context2.prev = 1;\n          _context2.next = 4;\n          return axios.get('/api/category');\n\n        case 4:\n          category = _context2.sent;\n          if (DEBUG) console.log('category is:', category);\n          _context2.next = 8;\n          return put({\n            type: 'SET_CATEGORY_LIST',\n            payload: category.data\n          });\n\n        case 8:\n          _context2.next = 13;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('Category get request failed', _context2.t0);\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 10]]);\n}\n\nexport default categorySaga;","map":{"version":3,"sources":["/Users/j.lin/prime/tier3/art-galore-solo/src/redux/sagas/category.saga.js"],"names":["categorySaga","fetchCategory","axios","put","takeLatest","DEBUG","console","log","get","category","type","payload","data"],"mappings":";;oDAIUA,Y;qDAOAC,a;;AAXV,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;;AAGA,SAAUJ,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMI,UAAU,CAAC,qBAAD,EAAwBH,aAAxB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAGA;;;AACA,IAAMI,KAAK,GAAC,IAAZ,C,CAEA;;AACA,SAAUJ,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,cAAII,KAAJ,EAAW;AACPC,YAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH;;AAHL;AAAA;AAQuB,iBAAML,KAAK,CAACM,GAAN,CAAU,eAAV,CAAN;;AARvB;AAQYC,UAAAA,QARZ;AAUM,cAAIJ,KAAJ,EACIC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BE,QAA5B;AAXV;AAcM,iBAAMN,GAAG,CAAC;AACRO,YAAAA,IAAI,EAAE,mBADE;AAERC,YAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFV,WAAD,CAAT;;AAdN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmBMN,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AAnBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyBA,eAAeP,YAAf","sourcesContent":["import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n\nfunction* categorySaga() {\n  yield takeLatest('FETCH_CATEGORY_LIST', fetchCategory);\n}\n//how to use a global flag??\nconst DEBUG=true;\n\n// worker Saga: will be fired on \"FETCH_CATEGORY\" actions\nfunction* fetchCategory() {\n    if (DEBUG) {\n        console.log('start of fetchCategory');\n    }\n\n    try {\n      // no need for credentials\n      // this retrives category list and save it in store\n      const category = yield axios.get('/api/category');\n\n      if (DEBUG)\n          console.log('category is:', category);\n\n\n      yield put({ \n        type: 'SET_CATEGORY_LIST', \n        payload: category.data \n        });\n    } catch (error) {\n      console.log('Category get request failed', error);\n    }\n}\n\n\n\nexport default categorySaga;\n"]},"metadata":{},"sourceType":"module"}